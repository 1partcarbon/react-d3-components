{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///react-d3-components.min.js","webpack:///webpack/bootstrap f2ffe676ae35db45cb4d","webpack:///./src/index.jsx","webpack:///external \"React\"","webpack:///external \"d3\"","webpack:///./src/Chart.jsx","webpack:///./src/HeightWidthMixin.jsx","webpack:///./src/Axis.jsx","webpack:///./src/DefaultPropsMixin.jsx","webpack:///./src/Tooltip.jsx","webpack:///./src/TooltipMixin.jsx","webpack:///./src/ArrayifyMixin.jsx","webpack:///./src/DefaultScalesMixin.jsx","webpack:///./src/AccessorMixin.jsx","webpack:///./src/Path.jsx","webpack:///./src/StackAccessorMixin.jsx","webpack:///./src/StackDataMixin.jsx","webpack:///./src/AreaChart.jsx","webpack:///./src/Bar.jsx","webpack:///./src/BarChart.jsx","webpack:///./src/Brush.jsx","webpack:///./src/LineChart.jsx","webpack:///./src/PieChart.jsx","webpack:///./src/ScatterPlot.jsx"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_1__","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","BarChart","PieChart","ScatterPlot","LineChart","AreaChart","Brush","React","Chart","createClass","displayName","propTypes","height","PropTypes","number","isRequired","width","margin","shape","top","bottom","left","right","render","_props","props","children","createElement","ref","transform","HeightWidthMixin","componentWillMount","_calculateInner","componentWillReceiveProps","nextProps","_innerHeight","_innerWidth","Axis","tickArguments","array","tickValues","tickFormat","func","innerTickSize","tickPadding","outerTickSize","scale","className","string","zero","orientation","oneOf","label","getDefaultProps","_getTranslateString","ticks","apply","domain","x","filter","element","tickSpacing","Math","max","sign","range","_d3_scaleRange","activeScale","rangeBand","e","undefined","y","x2","y2","dy","textAnchor","d","labelElement","tickElements","map","tick","index","position","translate","replace","key","stroke","pathElement","fill","style","shapeRendering","_d3_scaleExtent","start","stop","length","rangeExtent","d3","DefaultPropsMixin","data","oneOfType","object","xScale","yScale","colorScale","values","category20","Tooltip","html","node","hidden","display","pointerEvents","_slicedToArray","arr","i","Array","isArray","Symbol","iterator","Object","_step","_arr","_iterator","next","done","push","value","TypeError","TooltipMixin","tooltipHtml","tooltipMode","tooltipContained","bool","tooltipOffset","objectOf","getInitialState","tooltip","componentDidMount","_svg_node","getDOMNode","getElementsByTagName","onMouseEnter","lerp","t","a","b","preventDefault","svg","createSVGPoint","point","clientX","clientY","matrixTransform","getScreenCTM","inverse","rect","getBoundingClientRect","clientLeft","clientTop","_tooltipHtml","_tooltipHtml2","xPos","yPos","svgTop","svgLeft","setState","onMouseLeave","ArrayifyMixin","_arrayify","_data","DefaultScalesMixin","barPadding","_makeScales","xIntercept","yIntercept","_ref3","_ref32","_xScale","_xIntercept","_ref","_makeXScale","_ref2","_ref5","_ref52","_yScale","_yIntercept","_ref4","_makeYScale","_ref42","_makeLinearXScale","getMonth","_makeTimeXScale","_makeOrdinalXScale","innerWidth","extents","extent","prototype","concat","stack","linear","ordinal","rangeRoundBands","time","_makeLinearYScale","_makeOrdinalYScale","y0","innerHeight","min","AccessorMixin","Path","strokeLinecap","strokeWidth","strokeDasharray","onMouseMove","evt","StackAccessorMixin","StackDataMixin","offset","order","_stackData","layout","_extends","assign","target","arguments","source","hasOwnProperty","DataSet","area","line","areas","mixins","interpolate","xValueCursor","invert","xBisector","bisector","xIndex","xIndexRight","xValueRight","xIndexLeft","xValueLeft","abs","yValueCursor","yBisector","yIndex","yValue","yValueCumulative","xValue","xAxis","yAxis","y1","state","Bar","bars","midPoint","topStack","topElement","_d3_svg_brushCursor","n","s","w","nw","ne","se","sw","_d3_svg_brushResizes","resizers","xExtent","yExtent","xExtentDomain","yExtentDomain","_extent","_this","xRange","yRange","background","visibility","cursor","onMouseDown","_onMouseDownBackground","_onMouseDownExtent","test","event","_onMouseDownResizer","_empty","onMouseUp","_onMouseUp","_onMouseMove","_getMousePosition","size","_mouseMode","distanceFromBorder","_startPosition","dir","_resizeDir","_onDrag","_onResize","onChange","z","x0","x1","_state","lines","clipPath","renderToString","dangerouslySetInnerHTML","__html","defined","shapeColor","valuesAtX","idx","indexRight","valueRight","indexLeft","valueLeft","sort","yIndexRight","yIndexLeft","yValueRight","yValueLeft","_tooltipData","tooltipSymbol","symbol","type","symbolColor","Wedge","pie","arc","outerArc","radius","opacity","wedges","midAngle","startAngle","endAngle","labelPos","centroid","PI","linePos","points","innerRadius","outerRadius","labelRadius","padRadius","cornerRadius","any","pieData","translation","circles","onMouseOver","rScale"],"mappings":"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","file":"react-d3-components.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\", \"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactD3\"] = factory(require(\"React\"), require(\"d3\"));\n\telse\n\t\troot[\"ReactD3\"] = factory(root[\"React\"], root[\"d3\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"React\"), require(\"d3\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([\"React\", \"d3\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ReactD3\"] = factory(require(\"React\"), require(\"d3\"));\n\telse\n\t\troot[\"ReactD3\"] = factory(root[\"React\"], root[\"d3\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_1__, __WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n\n\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar BarChart = __webpack_require__(17);\n\tvar PieChart = __webpack_require__(20);\n\tvar ScatterPlot = __webpack_require__(21);\n\tvar LineChart = __webpack_require__(19);\n\tvar AreaChart = __webpack_require__(15);\n\tvar Brush = __webpack_require__(18);\n\n\tmodule.exports = {\n\t    BarChart: BarChart,\n\t    PieChart: PieChart,\n\t    ScatterPlot: ScatterPlot,\n\t    LineChart: LineChart,\n\t    AreaChart: AreaChart,\n\t    Brush: Brush\n\t};\n\n/***/ },\n/* 1 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n/***/ },\n/* 2 */\n/***/ function(module, exports, __webpack_require__) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ },\n/* 3 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\n\tvar Chart = React.createClass({\n\t    displayName: \"Chart\",\n\n\t    propTypes: {\n\t        height: React.PropTypes.number.isRequired,\n\t        width: React.PropTypes.number.isRequired,\n\t        margin: React.PropTypes.shape({\n\t            top: React.PropTypes.number,\n\t            bottom: React.PropTypes.number,\n\t            left: React.PropTypes.number,\n\t            right: React.PropTypes.number\n\t        }).isRequired\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var width = _props.width;\n\t        var height = _props.height;\n\t        var margin = _props.margin;\n\t        var children = _props.children;\n\n\t        return React.createElement(\n\t            \"svg\",\n\t            { ref: \"svg\", width: width, height: height },\n\t            React.createElement(\n\t                \"g\",\n\t                { transform: \"translate(\" + margin.left + \", \" + margin.top + \")\" },\n\t                children\n\t            )\n\t        );\n\t    }\n\t});\n\n\tmodule.exports = Chart;\n\n/***/ },\n/* 4 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar HeightWidthMixin = {\n\t    componentWillMount: function componentWillMount() {\n\t        this._calculateInner(this.props);\n\t    },\n\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        this._calculateInner(nextProps);\n\t    },\n\n\t    _calculateInner: function _calculateInner(props) {\n\t        var height = props.height;\n\t        var width = props.width;\n\t        var margin = props.margin;\n\n\t        this._innerHeight = height - margin.top - margin.bottom;\n\t        this._innerWidth = width - margin.left - margin.right;\n\t    }\n\t};\n\n\tmodule.exports = HeightWidthMixin;\n\n/***/ },\n/* 5 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Axis = React.createClass({\n\t    displayName: \"Axis\",\n\n\t    propTypes: {\n\t        tickArguments: React.PropTypes.array,\n\t        tickValues: React.PropTypes.array,\n\t        tickFormat: React.PropTypes.func,\n\t        innerTickSize: React.PropTypes.number,\n\t        tickPadding: React.PropTypes.number,\n\t        outerTickSize: React.PropTypes.number,\n\t        scale: React.PropTypes.func.isRequired,\n\t        className: React.PropTypes.string,\n\t        zero: React.PropTypes.number,\n\t        orientation: React.PropTypes.oneOf([\"top\", \"bottom\", \"left\", \"right\"]).isRequired,\n\t        label: React.PropTypes.string\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            tickArguments: [10],\n\t            tickValues: null,\n\t            tickFormat: null,\n\t            innerTickSize: 6,\n\t            tickPadding: 3,\n\t            outerTickSize: 6,\n\t            className: \"axis\",\n\t            zero: 0,\n\t            label: \"\"\n\t        };\n\t    },\n\n\t    _getTranslateString: function _getTranslateString() {\n\t        var _props = this.props;\n\t        var orientation = _props.orientation;\n\t        var height = _props.height;\n\t        var width = _props.width;\n\t        var zero = _props.zero;\n\n\t        if (orientation === \"top\") {\n\t            return \"translate(0, \" + zero + \")\";\n\t        } else if (orientation === \"bottom\") {\n\t            return \"translate(0, \" + (zero == 0 ? height : zero) + \")\";\n\t        } else if (orientation === \"left\") {\n\t            return \"translate(\" + zero + \", 0)\";\n\t        } else if (orientation === \"right\") {\n\t            return \"translate(\" + (zero == 0 ? width : zero) + \", 0)\";\n\t        } else {\n\t            return \"\";\n\t        }\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var height = _props.height;\n\t        var width = _props.width;\n\t        var tickArguments = _props.tickArguments;\n\t        var tickValues = _props.tickValues;\n\t        var tickFormat = _props.tickFormat;\n\t        var innerTickSize = _props.innerTickSize;\n\t        var tickPadding = _props.tickPadding;\n\t        var outerTickSize = _props.outerTickSize;\n\t        var scale = _props.scale;\n\t        var orientation = _props.orientation;\n\t        var className = _props.className;\n\t        var zero = _props.zero;\n\t        var label = _props.label;\n\n\t        var ticks = tickValues == null ? scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain() : tickValues;\n\n\t        if (!tickFormat) {\n\t            if (scale.tickFormat) {\n\t                tickFormat = scale.tickFormat.apply(scale, tickArguments);\n\t            } else {\n\t                tickFormat = function (x) {\n\t                    return x;\n\t                };\n\t            }\n\t        }\n\n\t        // TODO: is there a cleaner way? removes the 0 tick if axes are crossing\n\t        if (zero != height && zero != width && zero != 0) {\n\t            ticks = ticks.filter(function (element, index, array) {\n\t                return element == 0 ? false : true;\n\t            });\n\t        }\n\n\t        var tickSpacing = Math.max(innerTickSize, 0) + tickPadding;\n\n\t        var sign = orientation === \"top\" || orientation === \"left\" ? -1 : 1;\n\n\t        var range = this._d3_scaleRange(scale);\n\n\t        var activeScale = scale.rangeBand ? function (e) {\n\t            return scale(e) + scale.rangeBand() / 2;\n\t        } : scale;\n\n\t        var transform = undefined,\n\t            x = undefined,\n\t            y = undefined,\n\t            x2 = undefined,\n\t            y2 = undefined,\n\t            dy = undefined,\n\t            textAnchor = undefined,\n\t            d = undefined,\n\t            labelElement = undefined;\n\t        if (orientation === \"bottom\" || orientation === \"top\") {\n\t            transform = \"translate({}, 0)\";\n\t            x = 0;\n\t            y = sign * tickSpacing;\n\t            x2 = 0;\n\t            y2 = sign * innerTickSize;\n\t            dy = sign < 0 ? \"0em\" : \".71em\";\n\t            textAnchor = \"middle\";\n\t            d = \"M\" + range[0] + \", \" + sign * outerTickSize + \"V0H\" + range[1] + \"V\" + sign * outerTickSize;\n\n\t            labelElement = React.createElement(\n\t                \"text\",\n\t                { className: \"\" + className + \" label\", textAnchor: \"end\", x: width, y: -6 },\n\t                label\n\t            );\n\t        } else {\n\t            transform = \"translate(0, {})\";\n\t            x = sign * tickSpacing;\n\t            y = 0;\n\t            x2 = sign * innerTickSize;\n\t            y2 = 0;\n\t            dy = \".32em\";\n\t            textAnchor = sign < 0 ? \"end\" : \"start\";\n\t            d = \"M\" + sign * outerTickSize + \", \" + range[0] + \"H0V\" + range[1] + \"H\" + sign * outerTickSize;\n\n\t            labelElement = React.createElement(\n\t                \"text\",\n\t                { className: \"\" + className + \" label\", textAnchor: \"end\", y: 6, dy: \".75em\", transform: \"rotate(-90)\" },\n\t                label\n\t            );\n\t        }\n\n\t        var tickElements = ticks.map(function (tick, index) {\n\t            var position = activeScale(tick);\n\t            var translate = transform.replace(\"{}\", position);\n\t            return React.createElement(\n\t                \"g\",\n\t                { key: \"\" + tick + \".\" + index, className: \"tick\", transform: translate },\n\t                React.createElement(\"line\", { x2: x2, y2: y2, stroke: \"#aaa\" }),\n\t                React.createElement(\n\t                    \"text\",\n\t                    { x: x, y: y, dy: dy, textAnchor: textAnchor },\n\t                    tickFormat(tick)\n\t                )\n\t            );\n\t        });\n\n\t        var pathElement = React.createElement(\"path\", { className: \"domain\", d: d, fill: \"none\", stroke: \"#aaa\" });\n\n\t        return React.createElement(\n\t            \"g\",\n\t            { ref: \"axis\", className: className, transform: this._getTranslateString(), style: { shapeRendering: \"crispEdges\" } },\n\t            tickElements,\n\t            pathElement,\n\t            labelElement\n\t        );\n\t    },\n\n\t    _d3_scaleExtent: function _d3_scaleExtent(domain) {\n\t        var start = domain[0],\n\t            stop = domain[domain.length - 1];\n\t        return start < stop ? [start, stop] : [stop, start];\n\t    },\n\n\t    _d3_scaleRange: function _d3_scaleRange(scale) {\n\t        return scale.rangeExtent ? scale.rangeExtent() : this._d3_scaleExtent(scale.range());\n\t    }\n\t});\n\n\tmodule.exports = Axis;\n\n/***/ },\n/* 6 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar DefaultPropsMixin = {\n\t    propTypes: {\n\t        data: React.PropTypes.oneOfType([React.PropTypes.object, React.PropTypes.array]).isRequired,\n\t        height: React.PropTypes.number.isRequired,\n\t        width: React.PropTypes.number.isRequired,\n\t        margin: React.PropTypes.shape({\n\t            top: React.PropTypes.number,\n\t            bottom: React.PropTypes.number,\n\t            left: React.PropTypes.number,\n\t            right: React.PropTypes.number\n\t        }),\n\t        xScale: React.PropTypes.func,\n\t        yScale: React.PropTypes.func,\n\t        colorScale: React.PropTypes.func\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            data: { label: \"No data available\", values: [{ x: \"No data available\", y: 1 }] },\n\t            margin: { top: 0, bottom: 0, left: 0, right: 0 },\n\t            xScale: null,\n\t            yScale: null,\n\t            colorScale: d3.scale.category20()\n\t        };\n\t    }\n\t};\n\n\tmodule.exports = DefaultPropsMixin;\n\n/***/ },\n/* 7 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Tooltip = React.createClass({\n\t    displayName: \"Tooltip\",\n\n\t    propTypes: {\n\t        top: React.PropTypes.number.isRequired,\n\t        left: React.PropTypes.number.isRequired,\n\t        html: React.PropTypes.node,\n\t        translate: React.PropTypes.number\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            top: 150,\n\t            left: 100,\n\t            html: \"\",\n\t            translate: 50\n\t        };\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var top = _props.top;\n\t        var left = _props.left;\n\t        var hidden = _props.hidden;\n\t        var html = _props.html;\n\t        var translate = _props.translate;\n\n\t        var style = {\n\t            display: hidden ? \"none\" : \"block\",\n\t            position: \"fixed\",\n\t            top: top,\n\t            left: left,\n\t            transform: \"translate(-\" + translate + \"%, 0)\",\n\t            pointerEvents: \"none\"\n\t        };\n\n\t        return React.createElement(\n\t            \"div\",\n\t            { className: \"tooltip\", style: style },\n\t            html\n\t        );\n\t    }\n\t});\n\n\tmodule.exports = Tooltip;\n\n/***/ },\n/* 8 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _slicedToArray = function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { var _arr = []; for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) { _arr.push(_step.value); if (i && _arr.length === i) break; } return _arr; } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } };\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar TooltipMixin = {\n\t    propTypes: {\n\t        tooltipHtml: React.PropTypes.func,\n\t        tooltipMode: React.PropTypes.oneOf([\"mouse\", \"element\", \"fixed\"]),\n\t        tooltipContained: React.PropTypes.bool,\n\t        tooltipOffset: React.PropTypes.objectOf(React.PropTypes.number)\n\t    },\n\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            tooltip: {\n\t                hidden: true\n\t            }\n\t        };\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            tooltipMode: \"mouse\",\n\t            tooltipOffset: { top: -35, left: 0 },\n\t            tooltipHtml: null,\n\t            tooltipContained: false\n\t        };\n\t    },\n\n\t    componentDidMount: function componentDidMount() {\n\t        this._svg_node = this.getDOMNode().getElementsByTagName(\"svg\")[0];\n\t    },\n\n\t    onMouseEnter: function onMouseEnter(e, data) {\n\t        if (!this.props.tooltipHtml) {\n\t            return;\n\t        }\n\n\t        e.preventDefault();\n\n\t        var _props = this.props;\n\t        var margin = _props.margin;\n\t        var tooltipHtml = _props.tooltipHtml;\n\t        var tooltipMode = _props.tooltipMode;\n\t        var tooltipOffset = _props.tooltipOffset;\n\t        var tooltipContained = _props.tooltipContained;\n\n\t        var svg = this._svg_node;\n\t        var position = undefined;\n\t        if (svg.createSVGPoint) {\n\t            var point = svg.createSVGPoint();\n\t            point.x = e.clientX, point.y = e.clientY;\n\t            point = point.matrixTransform(svg.getScreenCTM().inverse());\n\t            position = [point.x - margin.left, point.y - margin.top];\n\t        } else {\n\t            var rect = svg.getBoundingClientRect();\n\t            position = [e.clientX - rect.left - svg.clientLeft - margin.left, e.clientY - rect.top - svg.clientTop - margin.top];\n\t        }\n\n\t        var _tooltipHtml = this._tooltipHtml(data, position);\n\n\t        var _tooltipHtml2 = _slicedToArray(_tooltipHtml, 3);\n\n\t        var html = _tooltipHtml2[0];\n\t        var xPos = _tooltipHtml2[1];\n\t        var yPos = _tooltipHtml2[2];\n\n\t        var svgTop = svg.getBoundingClientRect().top + margin.top;\n\t        var svgLeft = svg.getBoundingClientRect().left + margin.left;\n\n\t        var top = 0;\n\t        var left = 0;\n\n\t        if (tooltipMode === \"fixed\") {\n\t            top = svgTop + tooltipOffset.top;\n\t            left = svgLeft + tooltipOffset.left;\n\t        } else if (tooltipMode === \"element\") {\n\t            top = svgTop + yPos + tooltipOffset.top;\n\t            left = svgLeft + xPos + tooltipOffset.left;\n\t        } else {\n\t            // mouse\n\t            top = e.clientY + tooltipOffset.top;\n\t            left = e.clientX + tooltipOffset.left;\n\t        }\n\n\t        function lerp(t, a, b) {\n\t            return (1 - t) * a + t * b;\n\t        }\n\n\t        var translate = 50;\n\n\t        if (tooltipContained) {\n\t            var t = position[0] / svg.getBoundingClientRect().width;\n\t            translate = lerp(t, 0, 100);\n\t        }\n\n\t        this.setState({\n\t            tooltip: {\n\t                top: top,\n\t                left: left,\n\t                hidden: false,\n\t                html: html,\n\t                translate: translate\n\t            }\n\t        });\n\t    },\n\n\t    onMouseLeave: function onMouseLeave(e) {\n\t        if (!this.props.tooltipHtml) {\n\t            return;\n\t        }\n\n\t        e.preventDefault();\n\n\t        this.setState({\n\t            tooltip: {\n\t                hidden: true\n\t            }\n\t        });\n\t    }\n\t};\n\n\tmodule.exports = TooltipMixin;\n\n/***/ },\n/* 9 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar ArrayifyMixin = {\n\t    componentWillMount: function componentWillMount() {\n\t        this._arrayify(this.props);\n\t    },\n\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        this._arrayify(nextProps);\n\t    },\n\n\t    _arrayify: function _arrayify(props) {\n\t        if (props.data === null) {\n\t            this._data = [{\n\t                label: \"No data available\",\n\t                values: [{ x: \"No data available\", y: 1 }]\n\t            }];\n\t        } else if (!Array.isArray(props.data)) {\n\t            this._data = [props.data];\n\t        } else {\n\t            this._data = props.data;\n\t        }\n\t    }\n\t};\n\n\tmodule.exports = ArrayifyMixin;\n\n/***/ },\n/* 10 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _slicedToArray = function (arr, i) { if (Array.isArray(arr)) { return arr; } else if (Symbol.iterator in Object(arr)) { var _arr = []; for (var _iterator = arr[Symbol.iterator](), _step; !(_step = _iterator.next()).done;) { _arr.push(_step.value); if (i && _arr.length === i) break; } return _arr; } else { throw new TypeError(\"Invalid attempt to destructure non-iterable instance\"); } };\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar DefaultScalesMixin = {\n\t    propTypes: {\n\t        barPadding: React.PropTypes.number\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            barPadding: 0.5\n\t        };\n\t    },\n\n\t    componentWillMount: function componentWillMount() {\n\t        this._makeScales(this.props);\n\t    },\n\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        this._makeScales(nextProps);\n\t    },\n\n\t    _makeScales: function _makeScales(props) {\n\t        var xScale = props.xScale;\n\t        var xIntercept = props.xIntercept;\n\t        var yScale = props.yScale;\n\t        var yIntercept = props.yIntercept;\n\n\t        if (!xScale) {\n\t            var _ref = this._makeXScale();\n\n\t            var _ref2 = _slicedToArray(_ref, 2);\n\n\t            this._xScale = _ref2[0];\n\t            this._xIntercept = _ref2[1];\n\t        } else {\n\t            var _ref3 = [xScale, xIntercept];\n\n\t            var _ref32 = _slicedToArray(_ref3, 2);\n\n\t            this._xScale = _ref32[0];\n\t            this._xIntercept = _ref32[1];\n\t        }\n\n\t        if (!yScale) {\n\t            var _ref4 = this._makeYScale();\n\n\t            var _ref42 = _slicedToArray(_ref4, 2);\n\n\t            this._yScale = _ref42[0];\n\t            this._yIntercept = _ref42[1];\n\t        } else {\n\t            var _ref5 = [yScale, yIntercept];\n\n\t            var _ref52 = _slicedToArray(_ref5, 2);\n\n\t            this._yScale = _ref52[0];\n\t            this._yIntercept = _ref52[1];\n\t        }\n\t    },\n\n\t    _makeXScale: function _makeXScale() {\n\t        var _props = this.props;\n\t        var x = _props.x;\n\t        var values = _props.values;\n\n\t        var data = this._data;\n\n\t        if (typeof x(values(data[0])[0]) === \"number\") {\n\t            return this._makeLinearXScale();\n\t        } else if (typeof x(values(data[0])[0]).getMonth === \"function\") {\n\t            return this._makeTimeXScale();\n\t        } else {\n\t            return this._makeOrdinalXScale();\n\t        }\n\t    },\n\n\t    _makeLinearXScale: function _makeLinearXScale() {\n\t        var _props = this.props;\n\t        var x = _props.x;\n\t        var values = _props.values;\n\t        var data = this._data;\n\t        var innerWidth = this._innerWidth;\n\n\t        var extents = d3.extent(Array.prototype.concat.apply([], data.map(function (stack) {\n\t            return values(stack).map(function (e) {\n\t                return x(e);\n\t            });\n\t        })));\n\n\t        var scale = d3.scale.linear().domain(extents).range([0, innerWidth]);\n\n\t        var zero = d3.max([0, scale.domain()[0]]);\n\t        var xIntercept = scale(zero);\n\n\t        return [scale, xIntercept];\n\t    },\n\n\t    _makeOrdinalXScale: function _makeOrdinalXScale() {\n\t        var _props = this.props;\n\t        var x = _props.x;\n\t        var values = _props.values;\n\t        var barPadding = _props.barPadding;\n\t        var data = this._data;\n\t        var innerWidth = this._innerWidth;\n\n\t        var scale = d3.scale.ordinal().domain(values(data[0]).map(function (e) {\n\t            return x(e);\n\t        })).rangeRoundBands([0, innerWidth], barPadding);\n\n\t        return [scale, 0];\n\t    },\n\n\t    _makeTimeXScale: function _makeTimeXScale() {\n\t        var _props = this.props;\n\t        var x = _props.x;\n\t        var values = _props.values;\n\t        var barPadding = _props.barPadding;\n\t        var data = this._data;\n\t        var innerWidth = this._innerWidth;\n\n\t        var scale = d3.time.scale().domain(values(data[0]).map(function (e) {\n\t            return x(e);\n\t        })).range([0, innerWidth]);\n\n\t        return [scale, 0];\n\t    },\n\n\t    _makeYScale: function _makeYScale() {\n\t        var _props = this.props;\n\t        var y = _props.y;\n\t        var values = _props.values;\n\n\t        var data = this._data;\n\n\t        if (typeof y(values(data[0])[0]) === \"number\") {\n\t            return this._makeLinearYScale();\n\t        } else {\n\t            return this._makeOrdinalYScale();\n\t        }\n\t    },\n\n\t    _makeLinearYScale: function _makeLinearYScale() {\n\t        var _props = this.props;\n\t        var y = _props.y;\n\t        var y0 = _props.y0;\n\t        var values = _props.values;\n\t        var data = this._data;\n\t        var innerHeight = this._innerHeight;\n\n\t        var extents = d3.extent(Array.prototype.concat.apply([], data.map(function (stack) {\n\t            return values(stack).map(function (e) {\n\t                return y0(e) + y(e);\n\t            });\n\t        })));\n\n\t        extents = [d3.min([0, extents[0]]), extents[1]];\n\n\t        var scale = d3.scale.linear().domain(extents).range([innerHeight, 0]);\n\n\t        var zero = d3.max([0, scale.domain()[0]]);\n\t        var yIntercept = scale(zero);\n\n\t        return [scale, yIntercept];\n\t    },\n\n\t    _makeOrdinalYScale: function _makeOrdinalYScale() {\n\t        var data = this._data;\n\t        var innerHeight = this._innerHeight;\n\n\t        var scale = d3.scale.ordinal().range([innerHeight, 0]);\n\n\t        var yIntercept = scale(0);\n\n\t        return [scale, yIntercept];\n\t    }\n\t};\n\n\tmodule.exports = DefaultScalesMixin;\n\n/***/ },\n/* 11 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\n\tvar AccessorMixin = {\n\t    propTypes: {\n\t        label: React.PropTypes.func,\n\t        values: React.PropTypes.func,\n\t        x: React.PropTypes.func,\n\t        y: React.PropTypes.func,\n\t        y0: React.PropTypes.func\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            label: function (stack) {\n\t                return stack.label;\n\t            },\n\t            values: function (stack) {\n\t                return stack.values;\n\t            },\n\t            x: function (e) {\n\t                return e.x;\n\t            },\n\t            y: function (e) {\n\t                return e.y;\n\t            },\n\t            y0: function (e) {\n\t                return 0;\n\t            }\n\t        };\n\t    }\n\t};\n\n\tmodule.exports = AccessorMixin;\n\n/***/ },\n/* 12 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Path = React.createClass({\n\t    displayName: \"Path\",\n\n\t    propTypes: {\n\t        className: React.PropTypes.string,\n\t        stroke: React.PropTypes.string.isRequired,\n\t        strokeLinecap: React.PropTypes.string,\n\t        strokeWidth: React.PropTypes.string,\n\t        strokeDasharray: React.PropTypes.string,\n\t        fill: React.PropTypes.string,\n\t        d: React.PropTypes.string.isRequired,\n\t        data: React.PropTypes.array.isRequired\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            className: \"path\",\n\t            fill: \"none\",\n\t            strokeWidth: \"2\",\n\t            strokeLinecap: \"butt\",\n\t            strokeDasharray: \"none\"\n\t        };\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var className = _props.className;\n\t        var stroke = _props.stroke;\n\t        var strokeWidth = _props.strokeWidth;\n\t        var strokeLinecap = _props.strokeLinecap;\n\t        var strokeDasharray = _props.strokeDasharray;\n\t        var fill = _props.fill;\n\t        var d = _props.d;\n\t        var style = _props.style;\n\t        var data = _props.data;\n\t        var onMouseEnter = _props.onMouseEnter;\n\t        var onMouseLeave = _props.onMouseLeave;\n\n\t        return React.createElement(\"path\", {\n\t            className: className,\n\t            stroke: stroke,\n\t            strokeWidth: strokeWidth,\n\t            strokeLinecap: strokeLinecap,\n\t            strokeDasharray: strokeDasharray,\n\t            fill: fill,\n\t            d: d,\n\t            onMouseMove: function (evt) {\n\t                onMouseEnter(evt, data);\n\t            },\n\t            onMouseLeave: function (evt) {\n\t                onMouseLeave(evt);\n\t            },\n\t            style: style\n\t        });\n\t    }\n\t});\n\n\tmodule.exports = Path;\n\n/***/ },\n/* 13 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\n\tvar StackAccessorMixin = {\n\t    propTypes: {\n\t        label: React.PropTypes.func,\n\t        values: React.PropTypes.func,\n\t        x: React.PropTypes.func,\n\t        y: React.PropTypes.func,\n\t        y0: React.PropTypes.func\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            label: function (stack) {\n\t                return stack.label;\n\t            },\n\t            values: function (stack) {\n\t                return stack.values;\n\t            },\n\t            x: function (e) {\n\t                return e.x;\n\t            },\n\t            y: function (e) {\n\t                return e.y;\n\t            },\n\t            y0: function (e) {\n\t                return e.y0;\n\t            }\n\t        };\n\t    }\n\t};\n\n\tmodule.exports = StackAccessorMixin;\n\n/***/ },\n/* 14 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar StackDataMixin = {\n\t    propTypes: {\n\t        offset: React.PropTypes.string\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            offset: \"zero\",\n\t            order: \"default\"\n\t        };\n\t    },\n\n\t    componentWillMount: function componentWillMount() {\n\t        this._stackData(this.props);\n\t    },\n\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        this._stackData(nextProps);\n\t    },\n\n\t    _stackData: function _stackData(props) {\n\t        var offset = props.offset;\n\t        var order = props.order;\n\t        var x = props.x;\n\t        var y = props.y;\n\t        var values = props.values;\n\n\t        var stack = d3.layout.stack().offset(offset).order(order).x(x).y(y).values(values);\n\n\t        this._data = stack(this._data);\n\t    }\n\t};\n\n\tmodule.exports = StackDataMixin;\n\n/***/ },\n/* 15 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Chart = __webpack_require__(3);\n\tvar Axis = __webpack_require__(5);\n\tvar Path = __webpack_require__(12);\n\tvar Tooltip = __webpack_require__(7);\n\n\tvar DefaultPropsMixin = __webpack_require__(6);\n\tvar HeightWidthMixin = __webpack_require__(4);\n\tvar ArrayifyMixin = __webpack_require__(9);\n\tvar StackAccessorMixin = __webpack_require__(13);\n\tvar StackDataMixin = __webpack_require__(14);\n\tvar DefaultScalesMixin = __webpack_require__(10);\n\tvar TooltipMixin = __webpack_require__(8);\n\n\tvar DataSet = React.createClass({\n\t    displayName: \"DataSet\",\n\n\t    propTypes: {\n\t        data: React.PropTypes.array.isRequired,\n\t        area: React.PropTypes.func.isRequired,\n\t        line: React.PropTypes.func.isRequired,\n\t        colorScale: React.PropTypes.func.isRequired,\n\t        stroke: React.PropTypes.func.isRequired\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var data = _props.data;\n\t        var area = _props.area;\n\t        var line = _props.line;\n\t        var colorScale = _props.colorScale;\n\t        var stroke = _props.stroke;\n\t        var values = _props.values;\n\t        var label = _props.label;\n\t        var onMouseEnter = _props.onMouseEnter;\n\t        var onMouseLeave = _props.onMouseLeave;\n\n\t        var areas = data.map(function (stack, index) {\n\t            return React.createElement(Path, {\n\t                key: \"\" + label(stack) + \".\" + index,\n\t                className: \"area\",\n\t                stroke: \"none\",\n\t                fill: colorScale(label(stack)),\n\t                d: area(values(stack)),\n\t                onMouseEnter: onMouseEnter,\n\t                onMouseLeave: onMouseLeave,\n\t                data: data\n\t            });\n\t        });\n\n\t        var lines = data.map(function (stack) {\n\t            return React.createElement(Path, {\n\t                className: \"line\",\n\t                d: line(values(stack)),\n\t                stroke: stroke(label(stack))\n\t            });\n\t        });\n\n\t        return React.createElement(\n\t            \"g\",\n\t            null,\n\t            areas\n\t        );\n\t    }\n\t});\n\n\tvar AreaChart = React.createClass({\n\t    displayName: \"AreaChart\",\n\n\t    mixins: [DefaultPropsMixin, HeightWidthMixin, ArrayifyMixin, StackAccessorMixin, StackDataMixin, DefaultScalesMixin, TooltipMixin],\n\n\t    propTypes: {\n\t        interpolate: React.PropTypes.string,\n\t        stroke: React.PropTypes.func\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            interpolate: \"linear\",\n\t            stroke: d3.scale.category20()\n\t        };\n\t    },\n\n\t    _tooltipHtml: function _tooltipHtml(d, position) {\n\t        var _props = this.props;\n\t        var x = _props.x;\n\t        var y0 = _props.y0;\n\t        var y = _props.y;\n\t        var values = _props.values;\n\t        var label = _props.label;\n\t        var xScale = this._xScale;\n\t        var yScale = this._yScale;\n\n\t        var xValueCursor = xScale.invert(position[0]);\n\n\t        var xBisector = d3.bisector(function (e) {\n\t            return x(e);\n\t        }).right;\n\t        var xIndex = xBisector(values(d[0]), xScale.invert(position[0]));\n\t        xIndex = xIndex == values(d[0]).length ? xIndex - 1 : xIndex;\n\n\t        var xIndexRight = xIndex == values(d[0]).length ? xIndex - 1 : xIndex;\n\t        var xValueRight = x(values(d[0])[xIndexRight]);\n\n\t        var xIndexLeft = xIndex == 0 ? xIndex : xIndex - 1;\n\t        var xValueLeft = x(values(d[0])[xIndexLeft]);\n\n\t        if (Math.abs(xValueCursor - xValueRight) < Math.abs(xValueCursor - xValueLeft)) {\n\t            xIndex = xIndexRight;\n\t        } else {\n\t            xIndex = xIndexLeft;\n\t        }\n\n\t        var yValueCursor = yScale.invert(position[1]);\n\n\t        var yBisector = d3.bisector(function (e) {\n\t            return y0(values(e)[xIndex]) + y(values(e)[xIndex]);\n\t        }).left;\n\t        var yIndex = yBisector(d, yValueCursor);\n\t        yIndex = yIndex == d.length ? yIndex - 1 : yIndex;\n\n\t        var yValue = y(values(d[yIndex])[xIndex]);\n\t        var yValueCumulative = y0(values(d[d.length - 1])[xIndex]) + y(values(d[d.length - 1])[xIndex]);\n\n\t        var xValue = x(values(d[yIndex])[xIndex]);\n\n\t        var xPos = xScale(xValue);\n\t        var yPos = yScale(y0(values(d[yIndex])[xIndex]) + yValue);\n\n\t        return [this.props.tooltipHtml(yValue, yValueCumulative), xPos, yPos];\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var height = _props.height;\n\t        var width = _props.width;\n\t        var margin = _props.margin;\n\t        var colorScale = _props.colorScale;\n\t        var interpolate = _props.interpolate;\n\t        var stroke = _props.stroke;\n\t        var offset = _props.offset;\n\t        var values = _props.values;\n\t        var label = _props.label;\n\t        var x = _props.x;\n\t        var y = _props.y;\n\t        var y0 = _props.y0;\n\t        var xAxis = _props.xAxis;\n\t        var yAxis = _props.yAxis;\n\t        var data = this._data;\n\t        var innerWidth = this._innerWidth;\n\t        var innerHeight = this._innerHeight;\n\t        var xScale = this._xScale;\n\t        var yScale = this._yScale;\n\t        var xIntercept = this._xIntercept;\n\t        var yIntercept = this._yIntercept;\n\n\t        var line = d3.svg.line().x(function (e) {\n\t            return xScale(x(e));\n\t        }).y(function (e) {\n\t            return yScale(y0(e) + y(e));\n\t        }).interpolate(interpolate);\n\n\t        var area = d3.svg.area().x(function (e) {\n\t            return xScale(x(e));\n\t        }).y0(function (e) {\n\t            return yScale(yScale.domain()[0] + y0(e));\n\t        }).y1(function (e) {\n\t            return yScale(y0(e) + y(e));\n\t        }).interpolate(interpolate);\n\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                Chart,\n\t                { height: height, width: width, margin: margin },\n\t                React.createElement(DataSet, {\n\t                    data: data,\n\t                    line: line,\n\t                    area: area,\n\t                    colorScale: colorScale,\n\t                    stroke: stroke,\n\t                    label: label,\n\t                    values: values,\n\t                    onMouseEnter: this.onMouseEnter,\n\t                    onMouseLeave: this.onMouseLeave\n\t                }),\n\t                React.createElement(Axis, _extends({\n\t                    className: \"x axis\",\n\t                    orientation: \"bottom\",\n\t                    scale: xScale,\n\t                    height: innerHeight,\n\t                    width: innerWidth\n\t                }, xAxis)),\n\t                React.createElement(Axis, _extends({\n\t                    className: \"y axis\",\n\t                    orientation: \"left\",\n\t                    scale: yScale,\n\t                    height: innerHeight,\n\t                    width: innerWidth\n\t                }, yAxis))\n\t            ),\n\t            React.createElement(Tooltip, this.state.tooltip)\n\t        );\n\t    }\n\t});\n\n\tmodule.exports = AreaChart;\n\n/***/ },\n/* 16 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Bar = React.createClass({\n\t    displayName: \"Bar\",\n\n\t    propTypes: {\n\t        width: React.PropTypes.number.isRequired,\n\t        height: React.PropTypes.number.isRequired,\n\t        x: React.PropTypes.number.isRequired,\n\t        y: React.PropTypes.number.isRequired,\n\t        fill: React.PropTypes.string.isRequired,\n\t        data: React.PropTypes.oneOfType([React.PropTypes.array, React.PropTypes.object]).isRequired,\n\t        onMouseEnter: React.PropTypes.func,\n\t        onMouseLeave: React.PropTypes.func\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var x = _props.x;\n\t        var y = _props.y;\n\t        var width = _props.width;\n\t        var height = _props.height;\n\t        var fill = _props.fill;\n\t        var data = _props.data;\n\t        var onMouseEnter = _props.onMouseEnter;\n\t        var onMouseLeave = _props.onMouseLeave;\n\n\t        return React.createElement(\"rect\", {\n\t            className: \"bar\",\n\t            x: x,\n\t            y: y,\n\t            width: width,\n\t            height: height,\n\t            fill: fill,\n\t            onMouseMove: function (e) {\n\t                onMouseEnter(e, data);\n\t            },\n\t            onMouseLeave: function (e) {\n\t                onMouseLeave(e);\n\t            }\n\t        });\n\t    }\n\t});\n\n\tmodule.exports = Bar;\n\n/***/ },\n/* 17 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Chart = __webpack_require__(3);\n\tvar Axis = __webpack_require__(5);\n\tvar Bar = __webpack_require__(16);\n\tvar Tooltip = __webpack_require__(7);\n\n\tvar DefaultPropsMixin = __webpack_require__(6);\n\tvar HeightWidthMixin = __webpack_require__(4);\n\tvar ArrayifyMixin = __webpack_require__(9);\n\tvar StackAccessorMixin = __webpack_require__(13);\n\tvar StackDataMixin = __webpack_require__(14);\n\tvar DefaultScalesMixin = __webpack_require__(10);\n\tvar TooltipMixin = __webpack_require__(8);\n\n\tvar DataSet = React.createClass({\n\t    displayName: \"DataSet\",\n\n\t    propTypes: {\n\t        data: React.PropTypes.array.isRequired,\n\t        xScale: React.PropTypes.func.isRequired,\n\t        yScale: React.PropTypes.func.isRequired,\n\t        colorScale: React.PropTypes.func.isRequired,\n\t        values: React.PropTypes.func.isRequired,\n\t        label: React.PropTypes.func.isRequired,\n\t        x: React.PropTypes.func.isRequired,\n\t        y: React.PropTypes.func.isRequired,\n\t        y0: React.PropTypes.func.isRequired\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var data = _props.data;\n\t        var xScale = _props.xScale;\n\t        var yScale = _props.yScale;\n\t        var colorScale = _props.colorScale;\n\t        var values = _props.values;\n\t        var label = _props.label;\n\t        var x = _props.x;\n\t        var y = _props.y;\n\t        var y0 = _props.y0;\n\t        var onMouseEnter = _props.onMouseEnter;\n\t        var onMouseLeave = _props.onMouseLeave;\n\n\t        var bars = data.map(function (stack) {\n\t            return values(stack).map(function (e, index) {\n\t                return React.createElement(Bar, {\n\t                    key: \"\" + label(stack) + \".\" + index,\n\t                    width: xScale.rangeBand(),\n\t                    height: yScale(yScale.domain()[0]) - yScale(y(e)),\n\t                    x: xScale(x(e)),\n\t                    y: yScale(y0(e) + y(e)),\n\t                    fill: colorScale(label(stack)),\n\t                    data: e,\n\t                    onMouseEnter: onMouseEnter,\n\t                    onMouseLeave: onMouseLeave\n\t                });\n\t            });\n\t        });\n\n\t        return React.createElement(\n\t            \"g\",\n\t            null,\n\t            bars\n\t        );\n\t    }\n\t});\n\n\tvar BarChart = React.createClass({\n\t    displayName: \"BarChart\",\n\n\t    mixins: [DefaultPropsMixin, HeightWidthMixin, ArrayifyMixin, StackAccessorMixin, StackDataMixin, DefaultScalesMixin, TooltipMixin],\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {};\n\t    },\n\n\t    _tooltipHtml: function _tooltipHtml(d, position) {\n\t        var xScale = this._xScale;\n\t        var yScale = this._yScale;\n\n\t        var html = this.props.tooltipHtml(this.props.x(d), this.props.y0(d), this.props.y(d));\n\n\t        var midPoint = xScale.rangeBand() / 2;\n\t        var xPos = midPoint + xScale(this.props.x(d));\n\n\t        var topStack = this._data[this._data.length - 1].values;\n\t        var topElement = null;\n\n\t        // TODO: this might not scale if dataset is huge.\n\t        // consider pre-computing yPos for each X\n\t        for (var i = 0; i < topStack.length; i++) {\n\t            if (this.props.x(topStack[i]) === this.props.x(d)) {\n\t                topElement = topStack[i];\n\t                break;\n\t            }\n\t        }\n\t        var yPos = yScale(this.props.y0(topElement) + this.props.y(topElement));\n\n\t        return [html, xPos, yPos];\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var height = _props.height;\n\t        var width = _props.width;\n\t        var margin = _props.margin;\n\t        var colorScale = _props.colorScale;\n\t        var values = _props.values;\n\t        var label = _props.label;\n\t        var y = _props.y;\n\t        var y0 = _props.y0;\n\t        var x = _props.x;\n\t        var xAxis = _props.xAxis;\n\t        var yAxis = _props.yAxis;\n\t        var data = this._data;\n\t        var innerWidth = this._innerWidth;\n\t        var innerHeight = this._innerHeight;\n\t        var xScale = this._xScale;\n\t        var yScale = this._yScale;\n\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                Chart,\n\t                { height: height, width: width, margin: margin },\n\t                React.createElement(DataSet, {\n\t                    data: data,\n\t                    xScale: xScale,\n\t                    yScale: yScale,\n\t                    colorScale: colorScale,\n\t                    values: values,\n\t                    label: label,\n\t                    y: y,\n\t                    y0: y0,\n\t                    x: x,\n\t                    onMouseEnter: this.onMouseEnter,\n\t                    onMouseLeave: this.onMouseLeave\n\t                }),\n\t                React.createElement(Axis, _extends({\n\t                    className: \"x axis\",\n\t                    orientation: \"bottom\",\n\t                    scale: xScale,\n\t                    height: innerHeight,\n\t                    width: innerWidth\n\t                }, xAxis)),\n\t                React.createElement(Axis, _extends({\n\t                    className: \"y axis\",\n\t                    orientation: \"left\",\n\t                    scale: yScale,\n\t                    height: innerHeight,\n\t                    width: innerWidth\n\t                }, yAxis))\n\t            ),\n\t            React.createElement(Tooltip, this.state.tooltip)\n\t        );\n\t    }\n\t});\n\n\tmodule.exports = BarChart;\n\n/***/ },\n/* 18 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Chart = __webpack_require__(3);\n\tvar Axis = __webpack_require__(5);\n\n\tvar HeightWidthMixin = __webpack_require__(4);\n\n\t// Adapted for React from https://github.com/mbostock/d3/blob/master/src/svg/brush.js\n\t// TODO: Add D3 License\n\tvar _d3_svg_brushCursor = {\n\t    n: \"ns-resize\",\n\t    e: \"ew-resize\",\n\t    s: \"ns-resize\",\n\t    w: \"ew-resize\",\n\t    nw: \"nwse-resize\",\n\t    ne: \"nesw-resize\",\n\t    se: \"nwse-resize\",\n\t    sw: \"nesw-resize\"\n\t};\n\n\tvar _d3_svg_brushResizes = [[\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"], [\"e\", \"w\"], [\"n\", \"s\"], []];\n\n\t// TODO: add y axis support\n\tvar Brush = React.createClass({\n\t    displayName: \"Brush\",\n\n\t    mixins: [HeightWidthMixin],\n\n\t    getInitialState: function getInitialState() {\n\t        return {\n\t            resizers: _d3_svg_brushResizes[0],\n\t            xExtent: [0, 0],\n\t            yExtent: [0, 0],\n\t            xExtentDomain: undefined,\n\t            yExtentDomain: undefined\n\t        };\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            xScale: null,\n\t            yScale: null\n\t        };\n\t    },\n\n\t    componentWillMount: function componentWillMount() {\n\t        this._extent(this.props.extent);\n\n\t        this.setState({\n\t            resizers: _d3_svg_brushResizes[!this.props.xScale << 1 | !this.props.yScale]\n\t        });\n\t    },\n\n\t    componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n\t        // when <Brush/> is used inside a component\n\t        // we should not set the extent prop on every redraw of the parent, because it will\n\t        // stop us from actually setting the extent with the brush.\n\t        if (nextProps.xScale !== this.props.xScale) {\n\t            this._extent(nextProps.extent, nextProps.xScale);\n\t            this.setState({\n\t                resizers: _d3_svg_brushResizes[!this.props.xScale << 1 | !this.props.yScale]\n\t            });\n\t        }\n\t    },\n\n\t    render: function render() {\n\t        var _this = this;\n\n\t        // TODO: remove this.state this.props\n\t        var xRange = this.props.xScale ? this._d3_scaleRange(this.props.xScale) : null;\n\t        var yRange = this.props.yScale ? this._d3_scaleRange(this.props.yScale) : null;\n\n\t        var background = React.createElement(\"rect\", {\n\t            className: \"background\",\n\t            style: { visibility: \"visible\", cursor: \"crosshair\" },\n\t            x: xRange ? xRange[0] : \"\",\n\t            width: xRange ? xRange[1] - xRange[0] : \"\",\n\t            y: yRange ? yRange[0] : \"\",\n\t            height: yRange ? yRange[1] - yRange[0] : this._innerHeight,\n\t            onMouseDown: this._onMouseDownBackground\n\t        });\n\n\t        // TODO: it seems like actually we can have both x and y scales at the same time. need to find example.\n\n\t        var extent = undefined;\n\t        if (this.props.xScale) {\n\t            extent = React.createElement(\"rect\", {\n\t                className: \"extent\",\n\t                style: { cursor: \"move\" },\n\t                x: this.state.xExtent[0],\n\t                width: this.state.xExtent[1] - this.state.xExtent[0],\n\t                height: this._innerHeight,\n\t                onMouseDown: this._onMouseDownExtent\n\t            });\n\t        }\n\n\t        var resizers = this.state.resizers.map(function (e) {\n\t            return React.createElement(\n\t                \"g\",\n\t                {\n\t                    key: e,\n\t                    className: \"resize \" + e,\n\t                    style: { cursor: _d3_svg_brushCursor[e] },\n\t                    transform: \"translate(\" + _this.state.xExtent[+/e$/.test(e)] + \", \" + _this.state.yExtent[+/^s/.test(e)] + \")\",\n\t                    onMouseDown: function (event) {\n\t                        _this._onMouseDownResizer(event, e);\n\t                    }\n\t                },\n\t                React.createElement(\"rect\", {\n\t                    x: /[ew]$/.test(e) ? -3 : null,\n\t                    y: /^[ns]/.test(e) ? -3 : null,\n\t                    width: \"6\",\n\t                    height: _this._innerHeight,\n\t                    style: { visibility: \"hidden\", display: _this._empty() ? \"none\" : null }\n\t                })\n\t            );\n\t        });\n\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                Chart,\n\t                { height: this.props.height, width: this.props.width, margin: this.props.margin },\n\t                React.createElement(\n\t                    \"g\",\n\t                    {\n\t                        style: { pointerEvents: \"all\" },\n\t                        onMouseUp: this._onMouseUp,\n\t                        onMouseMove: this._onMouseMove\n\t                    },\n\t                    background,\n\t                    extent,\n\t                    resizers\n\t                ),\n\t                React.createElement(Axis, _extends({\n\t                    className: \"x axis\",\n\t                    orientation: \"bottom\",\n\t                    scale: this.props.xScale,\n\t                    height: this._innerHeight,\n\t                    width: this._innerWidth\n\t                }, this.props.xAxis))\n\t            )\n\t        );\n\t    },\n\n\t    // TODO: Code duplicated in TooltipMixin.jsx, move outside.\n\t    _getMousePosition: function _getMousePosition(e) {\n\t        var svg = this.getDOMNode().getElementsByTagName(\"svg\")[0];\n\t        var position = undefined;\n\t        if (svg.createSVGPoint) {\n\t            var point = svg.createSVGPoint();\n\t            point.x = e.clientX, point.y = e.clientY;\n\t            point = point.matrixTransform(svg.getScreenCTM().inverse());\n\t            position = [point.x - this.props.margin.left, point.y - this.props.margin.top];\n\t        } else {\n\t            var rect = svg.getBoundingClientRect();\n\t            position = [e.clientX - rect.left - svg.clientLeft - this.props.margin.left, e.clientY - rect.top - svg.clientTop - this.props.margin.left];\n\t        }\n\n\t        return position;\n\t    },\n\n\t    _onMouseDownBackground: function _onMouseDownBackground(e) {\n\t        e.preventDefault();\n\t        var range = this._d3_scaleRange(this.props.xScale);\n\t        var point = this._getMousePosition(e);\n\n\t        var size = this.state.xExtent[1] - this.state.xExtent[0];\n\n\t        range[1] -= size;\n\n\t        var min = Math.max(range[0], Math.min(range[1], point[0]));\n\t        this.setState({ xExtent: [min, min + size] });\n\t    },\n\n\t    // TODO: use constants instead of strings\n\t    _onMouseDownExtent: function _onMouseDownExtent(e) {\n\t        e.preventDefault();\n\t        this._mouseMode = \"drag\";\n\n\t        var point = this._getMousePosition(e);\n\t        var distanceFromBorder = point[0] - this.state.xExtent[0];\n\n\t        this._startPosition = distanceFromBorder;\n\t    },\n\n\t    _onMouseDownResizer: function _onMouseDownResizer(e, dir) {\n\t        e.preventDefault();\n\t        this._mouseMode = \"resize\";\n\t        this._resizeDir = dir;\n\t    },\n\n\t    _onDrag: function _onDrag(e) {\n\t        var range = this._d3_scaleRange(this.props.xScale);\n\t        var point = this._getMousePosition(e);\n\n\t        var size = this.state.xExtent[1] - this.state.xExtent[0];\n\n\t        range[1] -= size;\n\n\t        var min = Math.max(range[0], Math.min(range[1], point[0] - this._startPosition));\n\n\t        this.setState({ xExtent: [min, min + size], xExtentDomain: null });\n\t    },\n\n\t    _onResize: function _onResize(e) {\n\t        var range = this._d3_scaleRange(this.props.xScale);\n\t        var point = this._getMousePosition(e);\n\t        // Don't let the extent go outside of its limits\n\t        // TODO: support clamp argument of D3\n\t        var min = Math.max(range[0], Math.min(range[1], point[0]));\n\n\t        if (this._resizeDir == \"w\") {\n\t            if (min > this.state.xExtent[1]) {\n\t                this.setState({ xExtent: [this.state.xExtent[1], min], xExtentDomain: null });\n\t                this._resizeDir = \"e\";\n\t            } else {\n\t                this.setState({ xExtent: [min, this.state.xExtent[1]], xExtentDomain: null });\n\t            }\n\t        } else if (this._resizeDir == \"e\") {\n\t            if (min < this.state.xExtent[0]) {\n\t                this.setState({ xExtent: [min, this.state.xExtent[0]], xExtentDomain: null });\n\t                this._resizeDir = \"w\";\n\t            } else {\n\t                this.setState({ xExtent: [this.state.xExtent[0], min], xExtentDomain: null });\n\t            }\n\t        }\n\t    },\n\n\t    _onMouseMove: function _onMouseMove(e) {\n\t        e.preventDefault();\n\n\t        if (this._mouseMode == \"resize\") {\n\t            this._onResize(e);\n\t        } else if (this._mouseMode == \"drag\") {\n\t            this._onDrag(e);\n\t        }\n\t    },\n\n\t    _onMouseUp: function _onMouseUp(e) {\n\t        e.preventDefault();\n\n\t        this._mouseMode = null;\n\n\t        this.props.onChange(this._extent());\n\t    },\n\n\t    _extent: function _extent(z, xScale) {\n\t        var x = xScale || this.props.xScale;\n\t        var y = this.props.yScale;\n\t        var _state = this.state;\n\t        var xExtent = _state.xExtent;\n\t        var yExtent = _state.yExtent;\n\t        var xExtentDomain = _state.xExtentDomain;\n\t        var yExtentDomain = _state.yExtentDomain;\n\n\t        var x0, x1, y0, y1, t;\n\n\t        // Invert the pixel extent to data-space.\n\t        if (!arguments.length) {\n\t            if (x) {\n\t                if (xExtentDomain) {\n\t                    x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n\t                } else {\n\t                    x0 = xExtent[0], x1 = xExtent[1];\n\t                    if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n\t                    if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t                }\n\t            }\n\t            if (y) {\n\t                if (yExtentDomain) {\n\t                    y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n\t                } else {\n\t                    y0 = yExtent[0], y1 = yExtent[1];\n\t                    if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n\t                    if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t                }\n\t            }\n\t            return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n\t        }\n\n\t        // Scale the data-space extent to pixels.\n\t        if (x) {\n\t            x0 = z[0], x1 = z[1];\n\t            if (y) x0 = x0[0], x1 = x1[0];\n\t            xExtentDomain = [x0, x1];\n\t            if (x.invert) x0 = x(x0), x1 = x(x1);\n\t            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n\t            if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1]; // copy-on-write\n\t        }\n\t        if (y) {\n\t            y0 = z[0], y1 = z[1];\n\t            if (x) y0 = y0[1], y1 = y1[1];\n\t            yExtentDomain = [y0, y1];\n\t            if (y.invert) y0 = y(y0), y1 = y(y1);\n\t            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n\t            if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1]; // copy-on-write\n\t        }\n\n\t        this.setState({ xExtent: xExtent, yExtent: yExtent, xExtentDomain: xExtentDomain, yExtentDomain: yExtentDomain });\n\t    },\n\n\t    _empty: function _empty() {\n\t        return !!this.props.xScale && this.state.xExtent[0] == this.state.xExtent[1] || !!this.props.yScale && this.state.yExtent[0] == this.state.yExtent[1];\n\t    },\n\n\t    // TODO: Code duplicated in Axis.jsx, move outside.\n\t    _d3_scaleExtent: function _d3_scaleExtent(domain) {\n\t        var start = domain[0],\n\t            stop = domain[domain.length - 1];\n\t        return start < stop ? [start, stop] : [stop, start];\n\t    },\n\n\t    _d3_scaleRange: function _d3_scaleRange(scale) {\n\t        return scale.rangeExtent ? scale.rangeExtent() : this._d3_scaleExtent(scale.range());\n\t    }\n\t});\n\n\tmodule.exports = Brush;\n\n/***/ },\n/* 19 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Chart = __webpack_require__(3);\n\tvar Axis = __webpack_require__(5);\n\tvar Path = __webpack_require__(12);\n\tvar Tooltip = __webpack_require__(7);\n\n\tvar DefaultPropsMixin = __webpack_require__(6);\n\tvar HeightWidthMixin = __webpack_require__(4);\n\tvar ArrayifyMixin = __webpack_require__(9);\n\tvar AccessorMixin = __webpack_require__(11);\n\tvar DefaultScalesMixin = __webpack_require__(10);\n\tvar TooltipMixin = __webpack_require__(8);\n\n\tvar DataSet = React.createClass({\n\t    displayName: \"DataSet\",\n\n\t    propTypes: {\n\t        data: React.PropTypes.array.isRequired,\n\t        line: React.PropTypes.func.isRequired,\n\t        colorScale: React.PropTypes.func.isRequired\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var width = _props.width;\n\t        var height = _props.height;\n\t        var data = _props.data;\n\t        var line = _props.line;\n\t        var strokeWidth = _props.strokeWidth;\n\t        var strokeLinecap = _props.strokeLinecap;\n\t        var strokeDasharray = _props.strokeDasharray;\n\t        var colorScale = _props.colorScale;\n\t        var values = _props.values;\n\t        var label = _props.label;\n\t        var onMouseEnter = _props.onMouseEnter;\n\t        var onMouseLeave = _props.onMouseLeave;\n\n\t        var lines = data.map(function (stack, index) {\n\t            return React.createElement(Path, {\n\t                key: \"\" + label(stack) + \".\" + index,\n\t                className: \"line\",\n\t                d: line(values(stack)),\n\t                stroke: colorScale(label(stack)),\n\t                strokeWidth: typeof strokeWidth === \"function\" ? strokeWidth(label(stack)) : strokeWidth,\n\t                strokeLinecap: typeof strokeLinecap === \"function\" ? strokeLinecap(label(stack)) : strokeLinecap,\n\t                strokeDasharray: typeof strokeDasharray === \"function\" ? strokeDasharray(label(stack)) : strokeDasharray,\n\t                data: values(stack),\n\t                onMouseEnter: onMouseEnter,\n\t                onMouseLeave: onMouseLeave,\n\t                style: { clipPath: \"url(#lineClip)\" }\n\t            });\n\t        });\n\n\t        /*\n\t         The <rect> below is needed in case we want to show the tooltip no matter where on the chart the mouse is.\n\t         Not sure if this should be used.\n\t         */\n\t        var rect = React.renderToString(React.createElement(\"rect\", { width: width, height: height }));\n\t        return React.createElement(\n\t            \"g\",\n\t            null,\n\t            React.createElement(\"g\", { dangerouslySetInnerHTML: { __html: \"<defs><clipPath id=\\\"lineClip\\\">\" + rect } }),\n\t            lines,\n\t            React.createElement(\"rect\", { width: width, height: height, fill: \"none\", stroke: \"none\", style: { pointerEvents: \"all\" },\n\t                onMouseMove: function (evt) {\n\t                    onMouseEnter(evt, data);\n\t                },\n\t                onMouseLeave: function (evt) {\n\t                    onMouseLeave(evt);\n\t                }\n\t            })\n\t        );\n\t    }\n\t});\n\n\tvar LineChart = React.createClass({\n\t    displayName: \"LineChart\",\n\n\t    mixins: [DefaultPropsMixin, HeightWidthMixin, ArrayifyMixin, AccessorMixin, DefaultScalesMixin, TooltipMixin],\n\n\t    propTypes: {\n\t        interpolate: React.PropTypes.string,\n\t        defined: React.PropTypes.func\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            interpolate: \"linear\",\n\t            defined: function () {\n\t                return true;\n\t            },\n\t            shape: \"circle\",\n\t            shapeColor: null\n\t        };\n\t    },\n\n\t    /*\n\t     The code below supports finding the data values for the line closest to the mouse cursor.\n\t     Since it gets all events from the Rect overlaying the Chart the tooltip gets shown everywhere.\n\t     For now I don't want to use this method.\n\t     */\n\t    _tooltipHtml: function _tooltipHtml(data, position) {\n\t        var _props = this.props;\n\t        var x = _props.x;\n\t        var y0 = _props.y0;\n\t        var y = _props.y;\n\t        var values = _props.values;\n\t        var label = _props.label;\n\t        var xScale = this._xScale;\n\t        var yScale = this._yScale;\n\n\t        var xValueCursor = xScale.invert(position[0]);\n\t        var yValueCursor = yScale.invert(position[1]);\n\n\t        var xBisector = d3.bisector(function (e) {\n\t            return x(e);\n\t        }).left;\n\t        var valuesAtX = data.map(function (stack) {\n\t            var idx = xBisector(values(stack), xValueCursor);\n\n\t            var indexRight = idx === values(stack).length ? idx - 1 : idx;\n\t            var valueRight = x(values(stack)[indexRight]);\n\n\t            var indexLeft = idx === 0 ? idx : idx - 1;\n\t            var valueLeft = x(values(stack)[indexLeft]);\n\n\t            var index = undefined;\n\t            if (Math.abs(xValueCursor - valueRight) < Math.abs(xValueCursor - valueLeft)) {\n\t                index = indexRight;\n\t            } else {\n\t                index = indexLeft;\n\t            }\n\n\t            return { label: label(stack), value: values(stack)[index] };\n\t        });\n\n\t        valuesAtX.sort(function (a, b) {\n\t            return y(a.value) - y(b.value);\n\t        });\n\n\t        var yBisector = d3.bisector(function (e) {\n\t            return y(e.value);\n\t        }).left;\n\t        var yIndex = yBisector(valuesAtX, yValueCursor);\n\n\t        var yIndexRight = yIndex === valuesAtX.length ? yIndex - 1 : yIndex;\n\t        var yIndexLeft = yIndex === 0 ? yIndex : yIndex - 1;\n\n\t        var yValueRight = y(valuesAtX[yIndexRight].value);\n\t        var yValueLeft = y(valuesAtX[yIndexLeft].value);\n\n\t        var index = undefined;\n\t        if (Math.abs(yValueCursor - yValueRight) < Math.abs(yValueCursor - yValueLeft)) {\n\t            index = yIndexRight;\n\t        } else {\n\t            index = yIndexLeft;\n\t        }\n\n\t        this._tooltipData = valuesAtX[index];\n\n\t        var html = this.props.tooltipHtml(valuesAtX[index].label, valuesAtX[index].value);\n\n\t        var xPos = xScale(valuesAtX[index].value.x);\n\t        var yPos = yScale(valuesAtX[index].value.y);\n\t        return [html, xPos, yPos];\n\t    },\n\n\t    /*\n\t    _tooltipHtml(data, position) {\n\t        let {x, y0, y, values, label} = this.props;\n\t        let [xScale, yScale] = [this._xScale, this._yScale];\n\t         let xValueCursor = xScale.invert(position[0]);\n\t        let yValueCursor = yScale.invert(position[1]);\n\t         let xBisector = d3.bisector(e => { return x(e); }).left;\n\t        let xIndex = xBisector(data, xScale.invert(position[0]));\n\t         let indexRight = xIndex == data.length ? xIndex - 1 : xIndex;\n\t        let valueRight = x(data[indexRight]);\n\t         let indexLeft = xIndex == 0 ? xIndex : xIndex - 1;\n\t        let valueLeft = x(data[indexLeft]);\n\t         let index;\n\t        if (Math.abs(xValueCursor - valueRight) < Math.abs(xValueCursor - valueLeft)) {\n\t            index = indexRight;\n\t        } else {\n\t            index = indexLeft;\n\t        }\n\t         let yValue = y(data[index]);\n\t        let cursorValue = d3.round(yScale.invert(position[1]), 2);\n\t         return this.props.tooltipHtml(yValue, cursorValue);\n\t    },\n\t     */\n\n\t    /*\n\t             stroke,\n\t             strokeWidth,\n\t             strokeLinecap,\n\t             strokeDasharray,\n\t     */\n\t    render: function render() {\n\t        var _this = this;\n\n\t        var _props = this.props;\n\t        var height = _props.height;\n\t        var width = _props.width;\n\t        var margin = _props.margin;\n\t        var colorScale = _props.colorScale;\n\t        var interpolate = _props.interpolate;\n\t        var defined = _props.defined;\n\t        var stroke = _props.stroke;\n\t        var values = _props.values;\n\t        var label = _props.label;\n\t        var x = _props.x;\n\t        var y = _props.y;\n\t        var xAxis = _props.xAxis;\n\t        var yAxis = _props.yAxis;\n\t        var shape = _props.shape;\n\t        var shapeColor = _props.shapeColor;\n\t        var data = this._data;\n\t        var innerWidth = this._innerWidth;\n\t        var innerHeight = this._innerHeight;\n\t        var xScale = this._xScale;\n\t        var yScale = this._yScale;\n\t        var xIntercept = this._xIntercept;\n\t        var yIntercept = this._yIntercept;\n\n\t        var line = d3.svg.line().x(function (e) {\n\t            return xScale(x(e));\n\t        }).y(function (e) {\n\t            return yScale(y(e));\n\t        }).interpolate(interpolate).defined(defined);\n\n\t        var tooltipSymbol = undefined;\n\t        if (!this.state.tooltip.hidden) {\n\t            var symbol = d3.svg.symbol().type(shape);\n\t            var symbolColor = shapeColor ? shapeColor : colorScale(this._tooltipData.label);\n\n\t            var translate = this._tooltipData ? \"translate(\" + xScale(x(this._tooltipData.value)) + \", \" + yScale(y(this._tooltipData.value)) + \")\" : \"\";\n\t            tooltipSymbol = this.state.tooltip.hidden ? null : React.createElement(\"path\", {\n\t                className: \"dot\",\n\t                d: symbol(),\n\t                transform: translate,\n\t                fill: symbolColor,\n\t                onMouseEnter: function (evt) {\n\t                    _this.onMouseEnter(evt, data);\n\t                },\n\t                onMouseLeave: function (evt) {\n\t                    _this.onMouseLeave(evt);\n\t                }\n\t            });\n\t        }\n\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                Chart,\n\t                { height: height, width: width, margin: margin },\n\t                React.createElement(DataSet, _extends({\n\t                    height: innerHeight,\n\t                    width: innerWidth,\n\t                    data: data,\n\t                    line: line,\n\t                    colorScale: colorScale,\n\t                    values: values,\n\t                    label: label,\n\t                    onMouseEnter: this.onMouseEnter,\n\t                    onMouseLeave: this.onMouseLeave\n\t                }, stroke)),\n\t                React.createElement(Axis, _extends({\n\t                    className: \"x axis\",\n\t                    orientation: \"bottom\",\n\t                    scale: xScale,\n\t                    height: innerHeight,\n\t                    width: innerWidth,\n\t                    zero: yIntercept\n\t                }, xAxis)),\n\t                React.createElement(Axis, _extends({\n\t                    className: \"y axis\",\n\t                    orientation: \"left\",\n\t                    scale: yScale,\n\t                    height: innerHeight,\n\t                    width: innerWidth,\n\t                    zero: xIntercept\n\t                }, yAxis)),\n\t                tooltipSymbol\n\t            ),\n\t            React.createElement(Tooltip, this.state.tooltip)\n\t        );\n\t    }\n\t});\n\n\tmodule.exports = LineChart;\n\n/***/ },\n/* 20 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Chart = __webpack_require__(3);\n\tvar Tooltip = __webpack_require__(7);\n\n\tvar DefaultPropsMixin = __webpack_require__(6);\n\tvar HeightWidthMixin = __webpack_require__(4);\n\tvar AccessorMixin = __webpack_require__(11);\n\tvar TooltipMixin = __webpack_require__(8);\n\n\tvar Wedge = React.createClass({\n\t    displayName: \"Wedge\",\n\n\t    propTypes: {\n\t        d: React.PropTypes.string.isRequired,\n\t        fill: React.PropTypes.string.isRequired\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var fill = _props.fill;\n\t        var d = _props.d;\n\t        var data = _props.data;\n\t        var onMouseEnter = _props.onMouseEnter;\n\t        var onMouseLeave = _props.onMouseLeave;\n\n\t        return React.createElement(\"path\", {\n\t            fill: fill,\n\t            d: d,\n\t            onMouseMove: function (evt) {\n\t                onMouseEnter(evt, data);\n\t            },\n\t            onMouseLeave: function (evt) {\n\t                onMouseLeave(evt);\n\t            }\n\t        });\n\t    }\n\t});\n\n\tvar DataSet = React.createClass({\n\t    displayName: \"DataSet\",\n\n\t    propTypes: {\n\t        pie: React.PropTypes.array.isRequired,\n\t        arc: React.PropTypes.func.isRequired,\n\t        outerArc: React.PropTypes.func.isRequired,\n\t        colorScale: React.PropTypes.func.isRequired,\n\t        radius: React.PropTypes.number.isRequired,\n\t        strokeWidth: React.PropTypes.number,\n\t        stroke: React.PropTypes.string,\n\t        fill: React.PropTypes.string,\n\t        opacity: React.PropTypes.number,\n\t        x: React.PropTypes.func.isRequired\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            strokeWidth: 2,\n\t            stroke: \"#000\",\n\t            fill: \"none\",\n\t            opacity: 0.3\n\t        };\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var pie = _props.pie;\n\t        var arc = _props.arc;\n\t        var outerArc = _props.outerArc;\n\t        var colorScale = _props.colorScale;\n\t        var radius = _props.radius;\n\t        var strokeWidth = _props.strokeWidth;\n\t        var stroke = _props.stroke;\n\t        var fill = _props.fill;\n\t        var opacity = _props.opacity;\n\t        var x = _props.x;\n\t        var y = _props.y;\n\t        var onMouseEnter = _props.onMouseEnter;\n\t        var onMouseLeave = _props.onMouseLeave;\n\n\t        var wedges = pie.map(function (e, index) {\n\t            function midAngle(d) {\n\t                return d.startAngle + (d.endAngle - d.startAngle) / 2;\n\t            }\n\n\t            var d = arc(e);\n\n\t            var labelPos = outerArc.centroid(e);\n\t            labelPos[0] = radius * (midAngle(e) < Math.PI ? 1 : -1);\n\n\t            var textAnchor = midAngle(e) < Math.PI ? \"start\" : \"end\";\n\n\t            var linePos = outerArc.centroid(e);\n\t            linePos[0] = radius * 0.95 * (midAngle(e) < Math.PI ? 1 : -1);\n\n\t            return React.createElement(\n\t                \"g\",\n\t                { key: \"\" + x(e.data) + \".\" + y(e.data) + \".\" + index, className: \"arc\" },\n\t                React.createElement(Wedge, {\n\t                    data: e.data,\n\t                    fill: colorScale(x(e.data)),\n\t                    d: d,\n\t                    onMouseEnter: onMouseEnter,\n\t                    onMouseLeave: onMouseLeave\n\t                }),\n\t                React.createElement(\"polyline\", {\n\t                    opacity: opacity,\n\t                    strokeWidth: strokeWidth,\n\t                    stroke: stroke,\n\t                    fill: fill,\n\t                    points: [arc.centroid(e), outerArc.centroid(e), linePos]\n\t                }),\n\t                React.createElement(\n\t                    \"text\",\n\t                    {\n\t                        dy: \".35em\",\n\t                        x: labelPos[0],\n\t                        y: labelPos[1],\n\t                        textAnchor: textAnchor },\n\t                    x(e.data)\n\t                )\n\t            );\n\t        });\n\n\t        return React.createElement(\n\t            \"g\",\n\t            null,\n\t            wedges\n\t        );\n\t    }\n\t});\n\n\tvar PieChart = React.createClass({\n\t    displayName: \"PieChart\",\n\n\t    mixins: [DefaultPropsMixin, HeightWidthMixin, AccessorMixin, TooltipMixin],\n\n\t    propTypes: {\n\t        innerRadius: React.PropTypes.number,\n\t        outerRadius: React.PropTypes.number,\n\t        labelRadius: React.PropTypes.number,\n\t        padRadius: React.PropTypes.string,\n\t        cornerRadius: React.PropTypes.number,\n\t        sort: React.PropTypes.any\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            innerRadius: null,\n\t            outerRadius: null,\n\t            labelRadius: null,\n\t            padRadius: \"auto\",\n\t            cornerRadius: 0,\n\t            sort: undefined\n\t        };\n\t    },\n\n\t    _tooltipHtml: function _tooltipHtml(d, position) {\n\t        var html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n\n\t        return [html, 0, 0];\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var data = _props.data;\n\t        var width = _props.width;\n\t        var height = _props.height;\n\t        var margin = _props.margin;\n\t        var colorScale = _props.colorScale;\n\t        var innerRadius = _props.innerRadius;\n\t        var outerRadius = _props.outerRadius;\n\t        var labelRadius = _props.labelRadius;\n\t        var padRadius = _props.padRadius;\n\t        var cornerRadius = _props.cornerRadius;\n\t        var sort = _props.sort;\n\t        var x = _props.x;\n\t        var y = _props.y;\n\t        var values = _props.values;\n\t        var innerWidth = this._innerWidth;\n\t        var innerHeight = this._innerHeight;\n\n\t        var pie = d3.layout.pie().value(function (e) {\n\t            return y(e);\n\t        });\n\n\t        if (typeof sort !== \"undefined\") {\n\t            pie = pie.sort(sort);\n\t        }\n\n\t        var radius = Math.min(innerWidth, innerHeight) / 2;\n\t        if (!innerRadius) {\n\t            innerRadius = radius * 0.8;\n\t        }\n\n\t        if (!outerRadius) {\n\t            outerRadius = radius * 0.4;\n\t        }\n\n\t        if (!labelRadius) {\n\t            labelRadius = radius * 0.9;\n\t        }\n\n\t        var arc = d3.svg.arc().innerRadius(innerRadius).outerRadius(outerRadius).padRadius(padRadius).cornerRadius(cornerRadius);\n\n\t        var outerArc = d3.svg.arc().innerRadius(labelRadius).outerRadius(labelRadius);\n\n\t        var pieData = pie(values(data));\n\n\t        var translation = \"translate(\" + innerWidth / 2 + \", \" + innerHeight / 2 + \")\";\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                Chart,\n\t                { height: height, width: width, margin: margin },\n\t                React.createElement(\n\t                    \"g\",\n\t                    { transform: translation },\n\t                    React.createElement(DataSet, {\n\t                        width: innerWidth,\n\t                        height: innerHeight,\n\t                        colorScale: colorScale,\n\t                        pie: pieData,\n\t                        arc: arc,\n\t                        outerArc: outerArc,\n\t                        radius: radius,\n\t                        x: x,\n\t                        y: y,\n\t                        onMouseEnter: this.onMouseEnter,\n\t                        onMouseLeave: this.onMouseLeave\n\t                    })\n\t                )\n\t            ),\n\t            React.createElement(Tooltip, this.state.tooltip)\n\t        );\n\t    }\n\t});\n\n\tmodule.exports = PieChart;\n\n/***/ },\n/* 21 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t\"use strict\";\n\n\tvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\n\tvar React = __webpack_require__(1);\n\tvar d3 = __webpack_require__(2);\n\n\tvar Chart = __webpack_require__(3);\n\tvar Axis = __webpack_require__(5);\n\tvar Tooltip = __webpack_require__(7);\n\n\tvar DefaultPropsMixin = __webpack_require__(6);\n\tvar HeightWidthMixin = __webpack_require__(4);\n\tvar ArrayifyMixin = __webpack_require__(9);\n\tvar AccessorMixin = __webpack_require__(11);\n\tvar DefaultScalesMixin = __webpack_require__(10);\n\tvar TooltipMixin = __webpack_require__(8);\n\n\tvar DataSet = React.createClass({\n\t    displayName: \"DataSet\",\n\n\t    propTypes: {\n\t        data: React.PropTypes.array.isRequired,\n\t        symbol: React.PropTypes.func.isRequired,\n\t        xScale: React.PropTypes.func.isRequired,\n\t        yScale: React.PropTypes.func.isRequired,\n\t        colorScale: React.PropTypes.func.isRequired,\n\t        onMouseEnter: React.PropTypes.func,\n\t        onMouseLeave: React.PropTypes.func\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var data = _props.data;\n\t        var symbol = _props.symbol;\n\t        var xScale = _props.xScale;\n\t        var yScale = _props.yScale;\n\t        var colorScale = _props.colorScale;\n\t        var label = _props.label;\n\t        var values = _props.values;\n\t        var x = _props.x;\n\t        var y = _props.y;\n\t        var onMouseEnter = _props.onMouseEnter;\n\t        var onMouseLeave = _props.onMouseLeave;\n\n\t        var circles = data.map(function (stack) {\n\t            return values(stack).map(function (e, index) {\n\t                var translate = \"translate(\" + xScale(x(e)) + \", \" + yScale(y(e)) + \")\";\n\t                return React.createElement(\"path\", {\n\t                    key: \"\" + label(stack) + \".\" + index,\n\t                    className: \"dot\",\n\t                    d: symbol(),\n\t                    transform: translate,\n\t                    fill: colorScale(label(stack)),\n\t                    onMouseOver: function (evt) {\n\t                        onMouseEnter(evt, e);\n\t                    },\n\t                    onMouseLeave: function (evt) {\n\t                        onMouseLeave(evt);\n\t                    }\n\t                });\n\t            });\n\t        });\n\n\t        return React.createElement(\n\t            \"g\",\n\t            null,\n\t            circles\n\t        );\n\t    }\n\t});\n\n\tvar ScatterPlot = React.createClass({\n\t    displayName: \"ScatterPlot\",\n\n\t    mixins: [DefaultPropsMixin, HeightWidthMixin, ArrayifyMixin, AccessorMixin, DefaultScalesMixin, TooltipMixin],\n\n\t    propTypes: {\n\t        rScale: React.PropTypes.func,\n\t        shape: React.PropTypes.string\n\t    },\n\n\t    getDefaultProps: function getDefaultProps() {\n\t        return {\n\t            rScale: null,\n\t            shape: \"circle\"\n\t        };\n\t    },\n\n\t    _tooltipHtml: function _tooltipHtml(d, position) {\n\t        var xScale = this._xScale;\n\t        var yScale = this._yScale;\n\n\t        var html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n\n\t        var xPos = xScale(this.props.x(d));\n\t        var yPos = yScale(this.props.y(d));\n\n\t        return [html, xPos, yPos];\n\t    },\n\n\t    render: function render() {\n\t        var _props = this.props;\n\t        var height = _props.height;\n\t        var width = _props.width;\n\t        var margin = _props.margin;\n\t        var colorScale = _props.colorScale;\n\t        var rScale = _props.rScale;\n\t        var shape = _props.shape;\n\t        var label = _props.label;\n\t        var values = _props.values;\n\t        var x = _props.x;\n\t        var y = _props.y;\n\t        var xAxis = _props.xAxis;\n\t        var yAxis = _props.yAxis;\n\t        var data = this._data;\n\t        var innerWidth = this._innerWidth;\n\t        var innerHeight = this._innerHeight;\n\t        var xScale = this._xScale;\n\t        var yScale = this._yScale;\n\t        var xIntercept = this._xIntercept;\n\t        var yIntercept = this._yIntercept;\n\n\t        var symbol = d3.svg.symbol().type(shape);\n\n\t        if (rScale) {\n\t            symbol = symbol.size(rScale);\n\t        }\n\n\t        return React.createElement(\n\t            \"div\",\n\t            null,\n\t            React.createElement(\n\t                Chart,\n\t                { height: height, width: width, margin: margin },\n\t                React.createElement(Axis, _extends({\n\t                    className: \"x axis\",\n\t                    orientation: \"bottom\",\n\t                    scale: xScale,\n\t                    height: innerHeight,\n\t                    width: innerWidth,\n\t                    zero: yIntercept\n\t                }, xAxis)),\n\t                React.createElement(Axis, _extends({\n\t                    className: \"y axis\",\n\t                    orientation: \"left\",\n\t                    scale: yScale,\n\t                    height: innerHeight,\n\t                    width: innerWidth,\n\t                    zero: xIntercept\n\t                }, yAxis)),\n\t                React.createElement(DataSet, {\n\t                    data: data,\n\t                    xScale: xScale,\n\t                    yScale: yScale,\n\t                    colorScale: colorScale,\n\t                    symbol: symbol,\n\t                    label: label,\n\t                    values: values,\n\t                    x: x,\n\t                    y: y,\n\t                    onMouseEnter: this.onMouseEnter,\n\t                    onMouseLeave: this.onMouseLeave\n\t                })\n\t            ),\n\t            React.createElement(Tooltip, {\n\t                hidden: this.state.tooltip.hidden,\n\t                top: this.state.tooltip.top,\n\t                left: this.state.tooltip.left,\n\t                html: this.state.tooltip.html })\n\t        );\n\t    }\n\t});\n\n\tmodule.exports = ScatterPlot;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** react-d3-components.min.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap f2ffe676ae35db45cb4d\n **/","let BarChart = require('./BarChart');\nlet PieChart = require('./PieChart');\nlet ScatterPlot = require('./ScatterPlot');\nlet LineChart = require('./LineChart');\nlet AreaChart = require('./AreaChart');\nlet Brush = require('./Brush');\n\nmodule.exports = {\n    BarChart: BarChart,\n    PieChart: PieChart,\n    ScatterPlot: ScatterPlot,\n    LineChart: LineChart,\n    AreaChart: AreaChart,\n    Brush: Brush\n};\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/index.jsx\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_1__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"React\"\n ** module id = 1\n ** module chunks = 0\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external \"d3\"\n ** module id = 2\n ** module chunks = 0\n **/","let React = require('react');\n\nlet Chart = React.createClass({\n    propTypes: {\n        height: React.PropTypes.number.isRequired,\n        width: React.PropTypes.number.isRequired,\n        margin: React.PropTypes.shape({\n            top: React.PropTypes.number,\n            bottom: React.PropTypes.number,\n            left: React.PropTypes.number,\n            right: React.PropTypes.number\n        }).isRequired\n    },\n\n    render() {\n        let {width, height, margin, children} = this.props;\n\n        return (\n                <svg ref=\"svg\" width={width} height={height}>\n                <g transform={`translate(${margin.left}, ${margin.top})`}>{children}</g>\n                </svg>\n        );\n    }\n});\n\nmodule.exports = Chart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Chart.jsx\n **/","let HeightWidthMixin = {\n    componentWillMount() {\n        this._calculateInner(this.props);\n    },\n\n    componentWillReceiveProps(nextProps) {\n        this._calculateInner(nextProps);\n    },\n\n    _calculateInner(props) {\n        let {height, width, margin} = props;\n\n        this._innerHeight = height - margin.top - margin.bottom;\n        this._innerWidth = width - margin.left - margin.right;\n    }\n};\n\nmodule.exports = HeightWidthMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/HeightWidthMixin.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Axis = React.createClass({\n    propTypes: {\n        tickArguments: React.PropTypes.array,\n        tickValues: React.PropTypes.array,\n        tickFormat: React.PropTypes.func,\n        innerTickSize: React.PropTypes.number,\n        tickPadding: React.PropTypes.number,\n        outerTickSize: React.PropTypes.number,\n        scale: React.PropTypes.func.isRequired,\n        className: React.PropTypes.string,\n        zero: React.PropTypes.number,\n        orientation: React.PropTypes.oneOf(['top', 'bottom', 'left', 'right']).isRequired,\n        label: React.PropTypes.string\n    },\n\n    getDefaultProps() {\n        return {\n            tickArguments: [10],\n            tickValues: null,\n            tickFormat: null,\n            innerTickSize: 6,\n            tickPadding: 3,\n            outerTickSize: 6,\n            className: \"axis\",\n            zero: 0,\n            label: \"\"\n        };\n    },\n\n    _getTranslateString() {\n        let {orientation, height, width, zero} = this.props;\n\n        if (orientation === \"top\") {\n            return `translate(0, ${zero})`;\n        } else if (orientation === \"bottom\") {\n            return `translate(0, ${zero == 0 ? height : zero})`;\n        } else if (orientation === \"left\") {\n            return `translate(${zero}, 0)`;\n        } else if (orientation === \"right\") {\n            return `translate(${zero == 0 ? width : zero}, 0)`;\n        } else {\n            return \"\";\n        }\n    },\n\n    render() {\n        let {height,\n             width,\n             tickArguments,\n             tickValues,\n             tickFormat,\n             innerTickSize,\n             tickPadding,\n             outerTickSize,\n             scale,\n             orientation,\n             className,\n             zero,\n             label} = this.props;\n\n        let ticks = tickValues == null ? (scale.ticks ? scale.ticks.apply(scale, tickArguments) : scale.domain()) : tickValues;\n\n        if (!tickFormat)\n        {\n            if (scale.tickFormat) {\n                tickFormat = scale.tickFormat.apply(scale, tickArguments);\n            } else {\n                tickFormat = x => { return x; };\n            }\n        }\n\n        // TODO: is there a cleaner way? removes the 0 tick if axes are crossing\n        if (zero != height && zero != width && zero != 0) {\n            ticks = ticks.filter((element, index, array) => { return element == 0 ? false : true;});\n        }\n\n        let tickSpacing = Math.max(innerTickSize, 0) + tickPadding;\n\n        let sign = orientation === \"top\" || orientation === \"left\" ? -1 : 1;\n\n        let range = this._d3_scaleRange(scale);\n\n        let activeScale = scale.rangeBand ? e => { return scale(e) + scale.rangeBand() / 2; } : scale;\n\n        let transform, x, y, x2, y2, dy, textAnchor, d, labelElement;\n        if (orientation === \"bottom\" || orientation === \"top\") {\n            transform = `translate({}, 0)`;\n            x = 0;\n            y = sign * tickSpacing;\n            x2 = 0;\n            y2 = sign * innerTickSize;\n            dy = sign < 0 ? \"0em\" : \".71em\";\n            textAnchor = \"middle\";\n            d = `M${range[0]}, ${sign * outerTickSize}V0H${range[1]}V${sign * outerTickSize}`;\n\n            labelElement = <text className={`${className} label`} textAnchor={\"end\"} x={width} y={-6}>{label}</text>;\n        } else {\n            transform = `translate(0, {})`;\n            x = sign * tickSpacing;\n            y = 0;\n            x2 = sign * innerTickSize;\n            y2 = 0;\n            dy = \".32em\";\n            textAnchor = sign < 0 ? \"end\" : \"start\";\n            d = `M${sign * outerTickSize}, ${range[0]}H0V${range[1]}H${sign * outerTickSize}`;\n\n            labelElement = <text className={`${className} label`} textAnchor={\"end\"} y={6} dy={\".75em\"} transform={\"rotate(-90)\"}>{label}</text>;\n        }\n\n        let tickElements = ticks.map((tick, index) => {\n            let position = activeScale(tick);\n            let translate = transform.replace(\"{}\", position);\n            return (\n                    <g key={`${tick}.${index}`} className=\"tick\" transform={translate}>\n                    <line x2={x2} y2={y2} stroke=\"#aaa\"/>\n                    <text x={x} y={y} dy={dy} textAnchor={textAnchor}>\n                    {tickFormat(tick)}</text>\n                    </g>\n            );\n        });\n\n        let pathElement = <path className=\"domain\" d={d} fill=\"none\" stroke=\"#aaa\"/>;\n\n        return (\n                <g ref=\"axis\" className={className} transform={this._getTranslateString()} style={{shapeRendering: 'crispEdges'}}>\n                {tickElements}\n            {pathElement}\n            {labelElement}\n            </g>\n        );\n    },\n\n    _d3_scaleExtent(domain) {\n        let start = domain[0], stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    },\n\n    _d3_scaleRange(scale) {\n        return scale.rangeExtent ? scale.rangeExtent() : this._d3_scaleExtent(scale.range());\n    }\n});\n\nmodule.exports = Axis;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Axis.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet DefaultPropsMixin = {\n    propTypes: {\n        data: React.PropTypes.oneOfType([\n            React.PropTypes.object,\n            React.PropTypes.array\n        ]).isRequired,\n        height: React.PropTypes.number.isRequired,\n        width: React.PropTypes.number.isRequired,\n        margin: React.PropTypes.shape({\n            top: React.PropTypes.number,\n            bottom: React.PropTypes.number,\n            left: React.PropTypes.number,\n            right: React.PropTypes.number\n        }),\n        xScale: React.PropTypes.func,\n        yScale: React.PropTypes.func,\n        colorScale: React.PropTypes.func\n    },\n\n    getDefaultProps() {\n        return {\n            data: {label: 'No data available', values: [{x: 'No data available', y: 1}]},\n            margin: {top: 0, bottom: 0, left: 0, right: 0},\n            xScale: null,\n            yScale: null,\n            colorScale: d3.scale.category20()\n        };\n    }\n};\n\nmodule.exports = DefaultPropsMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/DefaultPropsMixin.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Tooltip = React.createClass({\n    propTypes: {\n        top: React.PropTypes.number.isRequired,\n        left: React.PropTypes.number.isRequired,\n        html: React.PropTypes.node,\n        translate: React.PropTypes.number\n    },\n\n    getDefaultProps() {\n        return {\n            top: 150,\n            left: 100,\n            html: '',\n            translate: 50\n        };\n    },\n\n    render() {\n        let {top, left, hidden, html, translate} = this.props;\n\n        let style = {\n            display: hidden ? 'none' : 'block',\n            position: 'fixed',\n            top: top,\n            left: left,\n            transform: `translate(-${translate}%, 0)`,\n            pointerEvents: 'none'\n        };\n\n        return (\n                <div className=\"tooltip\" style={style}>{html}</div>\n        );\n    }\n});\n\nmodule.exports = Tooltip;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Tooltip.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet TooltipMixin = {\n    propTypes: {\n        tooltipHtml: React.PropTypes.func,\n        tooltipMode: React.PropTypes.oneOf(['mouse', 'element', 'fixed']),\n        tooltipContained: React.PropTypes.bool,\n        tooltipOffset: React.PropTypes.objectOf(React.PropTypes.number)\n    },\n\n    getInitialState() {\n        return {\n            tooltip: {\n                hidden: true\n            }\n        };\n    },\n\n    getDefaultProps() {\n        return {\n            tooltipMode: 'mouse',\n            tooltipOffset: {top: -35, left: 0},\n            tooltipHtml: null,\n            tooltipContained: false\n        };\n    },\n\n    componentDidMount() {\n        this._svg_node = this.getDOMNode().getElementsByTagName(\"svg\")[0];\n    },\n\n    onMouseEnter(e, data) {\n        if (!this.props.tooltipHtml) {\n            return;\n        }\n\n        e.preventDefault();\n\n        let {margin,\n             tooltipHtml,\n             tooltipMode,\n             tooltipOffset,\n             tooltipContained} = this.props;\n\n        let svg = this._svg_node;\n        let position;\n        if (svg.createSVGPoint) {\n            var point = svg.createSVGPoint();\n            point.x = e.clientX, point.y = e.clientY;\n            point = point.matrixTransform(svg.getScreenCTM().inverse());\n            position = [point.x - margin.left, point.y - margin.top];\n        } else {\n            let rect = svg.getBoundingClientRect();\n            position = [e.clientX - rect.left - svg.clientLeft - margin.left,\n                        e.clientY - rect.top - svg.clientTop - margin.top];\n        }\n\n        let [html, xPos, yPos] = this._tooltipHtml(data, position);\n\n        let svgTop = svg.getBoundingClientRect().top + margin.top;\n        let svgLeft = svg.getBoundingClientRect().left + margin.left;\n\n        let top = 0;\n        let left = 0;\n\n        if (tooltipMode === 'fixed') {\n            top = svgTop + tooltipOffset.top;\n            left = svgLeft + tooltipOffset.left;\n        } else if (tooltipMode === 'element') {\n            top = svgTop + yPos + tooltipOffset.top;\n            left = svgLeft + xPos + tooltipOffset.left;\n        } else { // mouse\n            top = e.clientY + tooltipOffset.top;\n            left = e.clientX + tooltipOffset.left;\n        }\n\n        function lerp(t, a, b) {\n            return (1 - t) * a + t * b;\n        }\n\n        let translate = 50;\n\n        if (tooltipContained) {\n            let t = position[0] / svg.getBoundingClientRect().width;\n            translate = lerp(t, 0, 100);\n        }\n\n        this.setState({\n            tooltip: {\n                top: top,\n                left: left,\n                hidden: false,\n                html: html,\n                translate: translate\n            }\n        });\n    },\n\n    onMouseLeave(e) {\n        if (!this.props.tooltipHtml) {\n            return;\n        }\n\n        e.preventDefault();\n\n        this.setState({\n            tooltip: {\n                hidden: true\n            }\n        });\n    }\n};\n\nmodule.exports = TooltipMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/TooltipMixin.jsx\n **/","let ArrayifyMixin = {\n    componentWillMount() {\n        this._arrayify(this.props);\n    },\n\n    componentWillReceiveProps(nextProps) {\n        this._arrayify(nextProps);\n    },\n\n    _arrayify(props) {\n        if (props.data === null) {\n            this._data = [{\n                label: 'No data available',\n                values: [{x: 'No data available', y: 1}]\n            }];\n        } else if (!Array.isArray(props.data)) {\n            this._data = [props.data];\n        } else {\n            this._data = props.data;\n        }\n    }\n};\n\nmodule.exports = ArrayifyMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ArrayifyMixin.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet DefaultScalesMixin = {\n    propTypes: {\n        barPadding: React.PropTypes.number\n    },\n\n    getDefaultProps() {\n        return {\n            barPadding: 0.5\n        };\n    },\n\n    componentWillMount() {\n        this._makeScales(this.props);\n    },\n\n    componentWillReceiveProps(nextProps) {\n        this._makeScales(nextProps);\n    },\n\n    _makeScales(props) {\n        let {xScale, xIntercept, yScale, yIntercept} = props;\n\n        if (!xScale) {\n            [this._xScale, this._xIntercept] = this._makeXScale();\n        } else {\n            [this._xScale, this._xIntercept] = [xScale, xIntercept];\n        }\n\n        if (!yScale) {\n            [this._yScale, this._yIntercept] = this._makeYScale();\n        } else {\n            [this._yScale, this._yIntercept] = [yScale, yIntercept];\n        }\n    },\n\n    _makeXScale() {\n        let {x, values} = this.props;\n        let data = this._data;\n\n        if (typeof (x(values(data[0])[0])) === 'number') {\n            return this._makeLinearXScale();\n        } else if (typeof x(values(data[0])[0]).getMonth === 'function') {\n            return this._makeTimeXScale();\n        } else {\n            return this._makeOrdinalXScale();\n        }\n    },\n\n    _makeLinearXScale() {\n        let {x, values} = this.props;\n        let [data, innerWidth] = [this._data, this._innerWidth];\n\n        let extents = d3.extent(Array.prototype.concat.apply([],\n                                                             data.map(stack => {\n                                                                 return values(stack).map(e => {\n                                                                     return x(e);\n                                                                 });\n                                                             })));\n\n        let scale = d3.scale.linear()\n                .domain(extents)\n                .range([0, innerWidth]);\n\n        let zero = d3.max([0, scale.domain()[0]]);\n        let xIntercept = scale(zero);\n\n        return [scale, xIntercept];\n    },\n\n    _makeOrdinalXScale() {\n        let {x, values, barPadding} = this.props;\n        let [data, innerWidth] = [this._data, this._innerWidth];\n\n        let scale = d3.scale.ordinal()\n                .domain(values(data[0]).map(e => { return x(e); }))\n                .rangeRoundBands([0, innerWidth], barPadding);\n\n        return [scale, 0];\n    },\n\n    _makeTimeXScale() {\n        let {x, values, barPadding} = this.props;\n        let [data, innerWidth] = [this._data, this._innerWidth];\n\n        let scale = d3.time.scale()\n                .domain(values(data[0]).map(e => { return x(e); }))\n                .range([0, innerWidth]);\n\n        return [scale, 0];\n    },\n\n    _makeYScale() {\n        let {y, values} = this.props;\n        let data = this._data;\n\n        if (typeof y(values(data[0])[0]) === 'number') {\n            return this._makeLinearYScale();\n        } else {\n            return this._makeOrdinalYScale();\n        }\n    },\n\n    _makeLinearYScale() {\n        let {y, y0, values} = this.props;\n        let [data, innerHeight] = [this._data, this._innerHeight];\n\n        let extents = d3.extent(Array.prototype.concat.apply([],\n                                                             data.map(stack => {\n                                                                 return values(stack).map(e => {\n                                                                     return y0(e) + y(e);\n                                                                 });\n                                                             })));\n\n        extents = [d3.min([0, extents[0]]), extents[1]];\n\n        let scale = d3.scale.linear()\n                .domain(extents)\n                .range([innerHeight, 0]);\n\n        let zero = d3.max([0, scale.domain()[0]]);\n        let yIntercept = scale(zero);\n\n        return [scale, yIntercept];\n    },\n\n    _makeOrdinalYScale() {\n        let [data, innerHeight] = [this._data, this._innerHeight];\n\n        let scale = d3.scale.ordinal()\n                .range([innerHeight, 0]);\n\n        let yIntercept = scale(0);\n\n        return [scale, yIntercept];\n    }\n};\n\nmodule.exports = DefaultScalesMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/DefaultScalesMixin.jsx\n **/","let React = require('react');\n\nlet AccessorMixin = {\n    propTypes: {\n        label: React.PropTypes.func,\n        values: React.PropTypes.func,\n        x: React.PropTypes.func,\n        y: React.PropTypes.func,\n        y0: React.PropTypes.func\n    },\n\n    getDefaultProps() {\n        return {\n            label: stack => { return stack.label; },\n            values: stack => { return stack.values; },\n            x: e => { return e.x; },\n            y: e => { return e.y; },\n            y0: e => { return 0; }\n        };\n    }\n};\n\nmodule.exports = AccessorMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/AccessorMixin.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Path = React.createClass({\n    propTypes: {\n        className: React.PropTypes.string,\n        stroke: React.PropTypes.string.isRequired,\n        strokeLinecap: React.PropTypes.string,\n        strokeWidth: React.PropTypes.string,\n        strokeDasharray: React.PropTypes.string,\n        fill: React.PropTypes.string,\n        d: React.PropTypes.string.isRequired,\n        data: React.PropTypes.array.isRequired\n    },\n\n    getDefaultProps() {\n        return {\n            className: 'path',\n            fill: 'none',\n            strokeWidth: '2',\n            strokeLinecap: 'butt',\n            strokeDasharray: 'none'\n        };\n    },\n\n    render() {\n        let {className,\n             stroke,\n             strokeWidth,\n             strokeLinecap,\n             strokeDasharray,\n             fill,\n             d,\n             style,\n             data,\n             onMouseEnter,\n             onMouseLeave} = this.props;\n\n        return (\n                <path\n            className={className}\n            stroke={stroke}\n            strokeWidth={strokeWidth}\n            strokeLinecap={strokeLinecap}\n            strokeDasharray={strokeDasharray}\n            fill={fill}\n            d={d}\n            onMouseMove={ evt => { onMouseEnter(evt, data); } }\n            onMouseLeave={  evt => { onMouseLeave(evt); } }\n            style={style}\n                />\n        );\n    }\n});\n\nmodule.exports = Path;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Path.jsx\n **/","let React = require('react');\n\nlet StackAccessorMixin = {\n    propTypes: {\n        label: React.PropTypes.func,\n        values: React.PropTypes.func,\n        x: React.PropTypes.func,\n        y: React.PropTypes.func,\n        y0: React.PropTypes.func\n    },\n\n    getDefaultProps() {\n        return {\n            label: stack => { return stack.label; },\n            values: stack => { return stack.values; },\n            x: e => { return e.x; },\n            y: e => { return e.y; },\n            y0: e => { return e.y0; }\n        };\n    }\n};\n\nmodule.exports = StackAccessorMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/StackAccessorMixin.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet StackDataMixin = {\n    propTypes: {\n        offset: React.PropTypes.string\n    },\n\n    getDefaultProps() {\n        return {\n            offset: 'zero',\n            order: 'default'\n        };\n    },\n\n    componentWillMount() {\n        this._stackData(this.props);\n    },\n\n    componentWillReceiveProps(nextProps) {\n        this._stackData(nextProps);\n    },\n\n    _stackData(props) {\n        let {offset, order, x, y, values} = props;\n\n        let stack = d3.layout.stack()\n                .offset(offset)\n                .order(order)\n                .x(x)\n                .y(y)\n                .values(values);\n\n        this._data = stack(this._data);\n    }\n};\n\nmodule.exports = StackDataMixin;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/StackDataMixin.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Chart = require('./Chart');\nlet Axis = require('./Axis');\nlet Path = require('./Path');\nlet Tooltip = require('./Tooltip');\n\nlet DefaultPropsMixin = require('./DefaultPropsMixin');\nlet HeightWidthMixin = require('./HeightWidthMixin');\nlet ArrayifyMixin = require('./ArrayifyMixin');\nlet StackAccessorMixin = require('./StackAccessorMixin');\nlet StackDataMixin = require('./StackDataMixin');\nlet DefaultScalesMixin = require('./DefaultScalesMixin');\nlet TooltipMixin = require('./TooltipMixin');\n\nlet DataSet = React.createClass({\n    propTypes: {\n        data: React.PropTypes.array.isRequired,\n        area: React.PropTypes.func.isRequired,\n        line: React.PropTypes.func.isRequired,\n        colorScale: React.PropTypes.func.isRequired,\n        stroke: React.PropTypes.func.isRequired\n    },\n\n    render() {\n        let {data,\n             area,\n             line,\n             colorScale,\n             stroke,\n             values,\n             label,\n             onMouseEnter,\n             onMouseLeave} = this.props;\n\n        let areas = data.map((stack, index) => {\n            return (\n                    <Path\n                key={`${label(stack)}.${index}`}\n                className=\"area\"\n                stroke=\"none\"\n                fill={colorScale(label(stack))}\n                d={area(values(stack))}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                data={data}\n                    />\n            );\n        });\n\n        let lines = data.map(stack => {\n            return (\n                    <Path\n                className=\"line\"\n                d={line(values(stack))}\n                stroke={stroke(label(stack))}\n                    />\n            );\n        });\n\n        return (\n                <g>\n                {areas}\n            </g>\n        );\n    }\n});\n\nlet AreaChart = React.createClass({\n    mixins: [DefaultPropsMixin,\n             HeightWidthMixin,\n             ArrayifyMixin,\n             StackAccessorMixin,\n             StackDataMixin,\n             DefaultScalesMixin,\n             TooltipMixin],\n\n    propTypes: {\n        interpolate: React.PropTypes.string,\n        stroke: React.PropTypes.func\n    },\n\n    getDefaultProps() {\n        return {\n            interpolate: 'linear',\n            stroke: d3.scale.category20()\n        };\n    },\n\n    _tooltipHtml(d, position) {\n        let {x, y0, y, values, label} = this.props;\n        let [xScale, yScale] = [this._xScale, this._yScale];\n\n        let xValueCursor = xScale.invert(position[0]);\n\n        let xBisector = d3.bisector(e => { return x(e); }).right;\n        let xIndex = xBisector(values(d[0]), xScale.invert(position[0]));\n        xIndex = (xIndex == values(d[0]).length) ? xIndex - 1: xIndex;\n\n        let xIndexRight = xIndex == values(d[0]).length ? xIndex - 1: xIndex;\n        let xValueRight = x(values(d[0])[xIndexRight]);\n\n        let xIndexLeft = xIndex == 0 ? xIndex : xIndex - 1;\n        let xValueLeft = x(values(d[0])[xIndexLeft]);\n\n        if (Math.abs(xValueCursor - xValueRight) < Math.abs(xValueCursor - xValueLeft)) {\n            xIndex = xIndexRight;\n        } else {\n            xIndex = xIndexLeft;\n        }\n\n        let yValueCursor = yScale.invert(position[1]);\n\n        let yBisector = d3.bisector(e => { return y0(values(e)[xIndex]) + y(values(e)[xIndex]); }).left;\n        let yIndex = yBisector(d, yValueCursor);\n        yIndex = (yIndex == d.length) ? yIndex - 1: yIndex;\n\n        let yValue = y(values(d[yIndex])[xIndex]);\n        let yValueCumulative = y0(values(d[d.length - 1])[xIndex]) + y(values(d[d.length - 1])[xIndex]);\n\n        let xValue = x(values(d[yIndex])[xIndex]);\n\n        let xPos = xScale(xValue);\n        let yPos = yScale(y0(values(d[yIndex])[xIndex]) + yValue);\n\n        return [this.props.tooltipHtml(yValue, yValueCumulative), xPos, yPos];\n    },\n\n    render() {\n        let {height,\n             width,\n             margin,\n             colorScale,\n             interpolate,\n             stroke,\n             offset,\n             values,\n             label,\n             x,\n             y,\n             y0,\n             xAxis,\n             yAxis} = this.props;\n\n        let [data,\n             innerWidth,\n             innerHeight,\n             xScale,\n             yScale,\n             xIntercept,\n             yIntercept] = [this._data,\n                            this._innerWidth,\n                            this._innerHeight,\n                            this._xScale,\n                            this._yScale,\n                            this._xIntercept,\n                            this._yIntercept];\n\n        let line = d3.svg.line()\n                .x(function(e) { return xScale(x(e)); })\n                .y(function(e) { return yScale(y0(e) + y(e)); })\n                .interpolate(interpolate);\n\n        let area = d3.svg.area()\n                .x(function(e) { return xScale(x(e)); })\n                .y0(function(e) { return yScale(yScale.domain()[0] + y0(e)); })\n                .y1(function(e) { return yScale(y0(e) + y(e)); })\n                .interpolate(interpolate);\n\n        return (\n                <div>\n                <Chart height={height} width={width} margin={margin}>\n\n                <DataSet\n            data={data}\n            line={line}\n            area={area}\n            colorScale={colorScale}\n            stroke={stroke}\n            label={label}\n            values={values}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n                />\n\n                <Axis\n            className={\"x axis\"}\n            orientation={\"bottom\"}\n            scale={xScale}\n            height={innerHeight}\n            width={innerWidth}\n            {...xAxis}\n                />\n\n                <Axis\n            className={\"y axis\"}\n            orientation={\"left\"}\n            scale={yScale}\n            height={innerHeight}\n            width={innerWidth}\n            {...yAxis}\n                />\n                </Chart>\n\n                <Tooltip {...this.state.tooltip}/>\n                </div>\n        );\n    }\n});\n\nmodule.exports = AreaChart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/AreaChart.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Bar = React.createClass({\n    propTypes: {\n        width: React.PropTypes.number.isRequired,\n        height: React.PropTypes.number.isRequired,\n        x: React.PropTypes.number.isRequired,\n        y: React.PropTypes.number.isRequired,\n        fill: React.PropTypes.string.isRequired,\n        data: React.PropTypes.oneOfType([\n            React.PropTypes.array,\n            React.PropTypes.object\n        ]).isRequired,\n        onMouseEnter: React.PropTypes.func,\n        onMouseLeave: React.PropTypes.func\n    },\n\n    render() {\n        let {x,\n             y,\n             width,\n             height,\n             fill,\n             data,\n             onMouseEnter,\n             onMouseLeave} = this.props;\n\n        return (\n                <rect\n            className=\"bar\"\n            x={x}\n            y={y}\n            width={width}\n            height={height}\n            fill={fill}\n            onMouseMove={ e => { onMouseEnter(e, data); } }\n            onMouseLeave={ e => { onMouseLeave(e); } }\n                />\n        );\n    }\n});\n\nmodule.exports = Bar;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Bar.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Chart = require('./Chart');\nlet Axis = require('./Axis');\nlet Bar = require('./Bar');\nlet Tooltip = require('./Tooltip');\n\nlet DefaultPropsMixin = require('./DefaultPropsMixin');\nlet HeightWidthMixin = require('./HeightWidthMixin');\nlet ArrayifyMixin = require('./ArrayifyMixin');\nlet StackAccessorMixin = require('./StackAccessorMixin');\nlet StackDataMixin = require('./StackDataMixin');\nlet DefaultScalesMixin = require('./DefaultScalesMixin');\nlet TooltipMixin = require('./TooltipMixin');\n\nlet DataSet = React.createClass({\n    propTypes: {\n        data: React.PropTypes.array.isRequired,\n        xScale: React.PropTypes.func.isRequired,\n        yScale: React.PropTypes.func.isRequired,\n        colorScale: React.PropTypes.func.isRequired,\n        values: React.PropTypes.func.isRequired,\n        label: React.PropTypes.func.isRequired,\n        x: React.PropTypes.func.isRequired,\n        y: React.PropTypes.func.isRequired,\n        y0: React.PropTypes.func.isRequired\n    },\n\n    render() {\n        let {data,\n             xScale,\n             yScale,\n             colorScale,\n             values,\n             label,\n             x,\n             y,\n             y0,\n             onMouseEnter,\n             onMouseLeave} = this.props;\n\n        let bars = data.map(stack => {\n            return values(stack).map((e, index) => {\n                return (\n                        <Bar\n                    key={`${label(stack)}.${index}`}\n                    width={xScale.rangeBand()}\n                    height={yScale(yScale.domain()[0]) - yScale(y(e))}\n                    x={xScale(x(e))}\n                    y={yScale(y0(e) + y(e))}\n                    fill={colorScale(label(stack))}\n                    data={e}\n                    onMouseEnter={onMouseEnter}\n                    onMouseLeave={onMouseLeave}\n                        />\n                );\n            });\n        });\n\n        return (\n                <g>{bars}</g>\n        );\n    }\n});\n\nlet BarChart = React.createClass({\n    mixins: [DefaultPropsMixin,\n             HeightWidthMixin,\n             ArrayifyMixin,\n             StackAccessorMixin,\n             StackDataMixin,\n             DefaultScalesMixin,\n             TooltipMixin],\n\n    getDefaultProps() {\n        return {};\n    },\n\n    _tooltipHtml(d, position) {\n        let [xScale, yScale] = [this._xScale, this._yScale];\n\n        let html = this.props.tooltipHtml(this.props.x(d),\n                                          this.props.y0(d),\n                                          this.props.y(d));\n\n        let midPoint = xScale.rangeBand() / 2;\n        let xPos = midPoint + xScale(this.props.x(d));\n\n        let topStack = this._data[this._data.length - 1].values;\n        let topElement = null;\n\n        // TODO: this might not scale if dataset is huge.\n        // consider pre-computing yPos for each X\n        for (let i = 0; i < topStack.length; i++) {\n            if (this.props.x(topStack[i]) === this.props.x(d)) {\n                topElement = topStack[i];\n                break;\n            }\n        }\n        let yPos = yScale(this.props.y0(topElement) + this.props.y(topElement));\n\n        return [html, xPos, yPos];\n    },\n\n    render() {\n        let {height,\n             width,\n             margin,\n             colorScale,\n             values,\n             label,\n             y,\n             y0,\n             x,\n             xAxis,\n             yAxis} = this.props;\n\n        let [data,\n             innerWidth,\n             innerHeight,\n             xScale,\n             yScale] = [this._data,\n                        this._innerWidth,\n                        this._innerHeight,\n                        this._xScale,\n                        this._yScale];\n\n        return (\n                <div>\n                <Chart height={height} width={width} margin={margin}>\n                <DataSet\n            data={data}\n            xScale={xScale}\n            yScale={yScale}\n            colorScale={colorScale}\n            values={values}\n            label={label}\n            y={y}\n            y0={y0}\n            x={x}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n                />\n\n                <Axis\n            className={\"x axis\"}\n            orientation={\"bottom\"}\n            scale={xScale}\n            height={innerHeight}\n            width={innerWidth}\n            {...xAxis}\n                />\n\n                <Axis\n            className={\"y axis\"}\n            orientation={\"left\"}\n            scale={yScale}\n            height={innerHeight}\n            width={innerWidth}\n            {...yAxis}\n                />\n                </Chart>\n\n                <Tooltip {...this.state.tooltip}/>\n                </div>\n        );\n    }\n});\n\nmodule.exports = BarChart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/BarChart.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Chart = require('./Chart');\nlet Axis = require('./Axis');\n\nlet HeightWidthMixin = require('./HeightWidthMixin');\n\n// Adapted for React from https://github.com/mbostock/d3/blob/master/src/svg/brush.js\n// TODO: Add D3 License\nlet _d3_svg_brushCursor = {\n    n: \"ns-resize\",\n    e: \"ew-resize\",\n    s: \"ns-resize\",\n    w: \"ew-resize\",\n    nw: \"nwse-resize\",\n    ne: \"nesw-resize\",\n    se: \"nwse-resize\",\n    sw: \"nesw-resize\"\n};\n\nlet _d3_svg_brushResizes = [\n    [\"n\", \"e\", \"s\", \"w\", \"nw\", \"ne\", \"se\", \"sw\"],\n    [\"e\", \"w\"],\n    [\"n\", \"s\"],\n    []\n];\n\n// TODO: add y axis support\nlet Brush = React.createClass({\n    mixins: [HeightWidthMixin],\n\n    getInitialState() {\n        return {\n            resizers:  _d3_svg_brushResizes[0],\n            xExtent: [0, 0],\n            yExtent: [0, 0],\n            xExtentDomain: undefined,\n            yExtentDomain: undefined\n        };\n    },\n\n    getDefaultProps() {\n        return {\n            xScale: null,\n            yScale: null\n        };\n    },\n\n    componentWillMount() {\n        this._extent(this.props.extent);\n\n        this.setState({\n            resizers: _d3_svg_brushResizes[!(this.props.xScale) << 1 | !(this.props.yScale)]\n        });\n    },\n\n    componentWillReceiveProps(nextProps) {\n        // when <Brush/> is used inside a component\n        // we should not set the extent prop on every redraw of the parent, because it will\n        // stop us from actually setting the extent with the brush.\n        if (nextProps.xScale !== this.props.xScale) {\n            this._extent(nextProps.extent, nextProps.xScale);\n            this.setState({\n                resizers: _d3_svg_brushResizes[!(this.props.xScale) << 1 | !(this.props.yScale)]\n            });\n        }\n    },\n\n    render() {\n        // TODO: remove this.state this.props\n        let xRange = this.props.xScale ? this._d3_scaleRange(this.props.xScale) : null;\n        let yRange = this.props.yScale ? this._d3_scaleRange(this.props.yScale) : null;\n\n        let background = <rect\n        className=\"background\"\n        style={{ visibility: 'visible', cursor: 'crosshair' }}\n        x={xRange ? xRange[0] : \"\"}\n        width={xRange ? xRange[1] - xRange[0] : \"\"}\n        y={yRange ? yRange[0] : \"\"}\n        height={yRange ? yRange[1] - yRange[0] : this._innerHeight}\n        onMouseDown={this._onMouseDownBackground}\n            />;\n\n        // TODO: it seems like actually we can have both x and y scales at the same time. need to find example.\n\n        let extent;\n        if (this.props.xScale) {\n            extent = <rect\n            className=\"extent\"\n            style={{ cursor: 'move' }}\n            x={this.state.xExtent[0]}\n            width={this.state.xExtent[1] - this.state.xExtent[0]}\n            height={this._innerHeight}\n            onMouseDown={this._onMouseDownExtent}\n                />;\n        }\n\n        let resizers = this.state.resizers.map(e => {\n            return (\n                    <g\n                key={e}\n                className={`resize ${e}`}\n                style={{ cursor: _d3_svg_brushCursor[e] }}\n                transform={`translate(${this.state.xExtent[+/e$/.test(e)]}, ${this.state.yExtent[+/^s/.test(e)]})`}\n                onMouseDown={(event) => { this._onMouseDownResizer(event, e); }}\n                    >\n                    <rect\n                x={/[ew]$/.test(e) ? -3 : null}\n                y={/^[ns]/.test(e) ? -3 : null}\n                width=\"6\"\n                height={this._innerHeight}\n                style={{ visibility: 'hidden', display: this._empty() ? \"none\" : null }}\n                    />\n                    </g>\n            );\n        });\n\n        return (\n                <div>\n                <Chart height={this.props.height} width={this.props.width} margin={this.props.margin}>\n                <g\n            style={{ pointerEvents: 'all' }}\n            onMouseUp={this._onMouseUp}\n            onMouseMove={this._onMouseMove}\n                >\n                {background}{extent}{resizers}\n            </g>\n\n                <Axis\n            className={\"x axis\"}\n            orientation={\"bottom\"}\n            scale={this.props.xScale}\n            height={this._innerHeight}\n            width={this._innerWidth}\n            {...this.props.xAxis}\n                />\n                </Chart>\n                </div>\n        );\n    },\n\n    // TODO: Code duplicated in TooltipMixin.jsx, move outside.\n    _getMousePosition(e) {\n        let svg = this.getDOMNode().getElementsByTagName(\"svg\")[0];\n        let position;\n        if (svg.createSVGPoint) {\n            var point = svg.createSVGPoint();\n            point.x = e.clientX, point.y = e.clientY;\n            point = point.matrixTransform(svg.getScreenCTM().inverse());\n            position = [point.x - this.props.margin.left, point.y - this.props.margin.top];\n        } else {\n            let rect = svg.getBoundingClientRect();\n            position = [e.clientX - rect.left - svg.clientLeft - this.props.margin.left,\n                        e.clientY - rect.top - svg.clientTop - this.props.margin.left];\n        }\n\n        return position;\n    },\n\n    _onMouseDownBackground(e) {\n        e.preventDefault();\n        let range = this._d3_scaleRange(this.props.xScale);\n        let point = this._getMousePosition(e);\n\n        let size = this.state.xExtent[1] - this.state.xExtent[0];\n\n        range[1] -= size;\n\n        let min = Math.max(range[0], Math.min(range[1], point[0]));\n        this.setState({xExtent: [min, min + size]});\n    },\n\n    // TODO: use constants instead of strings\n    _onMouseDownExtent(e) {\n        e.preventDefault();\n        this._mouseMode = \"drag\";\n\n        let point = this._getMousePosition(e);\n        let distanceFromBorder = point[0] - this.state.xExtent[0];\n\n        this._startPosition = distanceFromBorder;\n    },\n\n    _onMouseDownResizer(e, dir) {\n        e.preventDefault();\n        this._mouseMode = \"resize\";\n        this._resizeDir = dir;\n    },\n\n    _onDrag(e) {\n        let range = this._d3_scaleRange(this.props.xScale);\n        let point = this._getMousePosition(e);\n\n        let size = this.state.xExtent[1] - this.state.xExtent[0];\n\n        range[1] -= size;\n\n        let min = Math.max(range[0], Math.min(range[1], point[0] - this._startPosition));\n\n        this.setState({xExtent: [min, min + size], xExtentDomain: null});\n    },\n\n    _onResize(e) {\n        let range = this._d3_scaleRange(this.props.xScale);\n        let point = this._getMousePosition(e);\n        // Don't let the extent go outside of its limits\n        // TODO: support clamp argument of D3\n        let min = Math.max(range[0], Math.min(range[1], point[0]));\n\n        if (this._resizeDir == \"w\") {\n            if (min > this.state.xExtent[1]) {\n                this.setState({xExtent: [this.state.xExtent[1], min], xExtentDomain: null});\n                this._resizeDir = \"e\";\n            } else {\n                this.setState({xExtent: [min, this.state.xExtent[1]], xExtentDomain: null});\n            }\n        } else if (this._resizeDir == \"e\") {\n            if (min < this.state.xExtent[0]) {\n                this.setState({xExtent: [min, this.state.xExtent[0]], xExtentDomain: null});\n                this._resizeDir = \"w\";\n            } else {\n                this.setState({xExtent: [this.state.xExtent[0], min], xExtentDomain: null});\n            }\n        }\n    },\n\n    _onMouseMove(e) {\n        e.preventDefault();\n\n        if (this._mouseMode == \"resize\") {\n            this._onResize(e);\n        } else if (this._mouseMode == \"drag\") {\n            this._onDrag(e);\n        }\n    },\n\n    _onMouseUp(e) {\n        e.preventDefault();\n\n        this._mouseMode = null;\n\n        this.props.onChange(this._extent());\n    },\n\n    _extent(z, xScale) {\n        let [x, y] = [xScale || this.props.xScale, this.props.yScale];\n\n        let {xExtent, yExtent, xExtentDomain, yExtentDomain} = this.state;\n\n        var x0, x1, y0, y1, t;\n\n        // Invert the pixel extent to data-space.\n        if (!arguments.length) {\n            if (x) {\n                if (xExtentDomain) {\n                    x0 = xExtentDomain[0], x1 = xExtentDomain[1];\n                } else {\n                    x0 = xExtent[0], x1 = xExtent[1];\n                    if (x.invert) x0 = x.invert(x0), x1 = x.invert(x1);\n                    if (x1 < x0) t = x0, x0 = x1, x1 = t;\n                }\n            }\n            if (y) {\n                if (yExtentDomain) {\n                    y0 = yExtentDomain[0], y1 = yExtentDomain[1];\n                } else {\n                    y0 = yExtent[0], y1 = yExtent[1];\n                    if (y.invert) y0 = y.invert(y0), y1 = y.invert(y1);\n                    if (y1 < y0) t = y0, y0 = y1, y1 = t;\n                }\n            }\n            return x && y ? [[x0, y0], [x1, y1]] : x ? [x0, x1] : y && [y0, y1];\n        }\n\n        // Scale the data-space extent to pixels.\n        if (x) {\n            x0 = z[0], x1 = z[1];\n            if (y) x0 = x0[0], x1 = x1[0];\n            xExtentDomain = [x0, x1];\n            if (x.invert) x0 = x(x0), x1 = x(x1);\n            if (x1 < x0) t = x0, x0 = x1, x1 = t;\n            if (x0 != xExtent[0] || x1 != xExtent[1]) xExtent = [x0, x1]; // copy-on-write\n        }\n        if (y) {\n            y0 = z[0], y1 = z[1];\n            if (x) y0 = y0[1], y1 = y1[1];\n            yExtentDomain = [y0, y1];\n            if (y.invert) y0 = y(y0), y1 = y(y1);\n            if (y1 < y0) t = y0, y0 = y1, y1 = t;\n            if (y0 != yExtent[0] || y1 != yExtent[1]) yExtent = [y0, y1]; // copy-on-write\n        }\n\n        this.setState({ xExtent: xExtent, yExtent: yExtent, xExtentDomain: xExtentDomain, yExtentDomain: yExtentDomain });\n    },\n\n    _empty() {\n        return !!this.props.xScale && this.state.xExtent[0] == this.state.xExtent[1]\n            || !!this.props.yScale && this.state.yExtent[0] == this.state.yExtent[1];\n    },\n\n    // TODO: Code duplicated in Axis.jsx, move outside.\n    _d3_scaleExtent(domain) {\n        let start = domain[0], stop = domain[domain.length - 1];\n        return start < stop ? [start, stop] : [stop, start];\n    },\n\n    _d3_scaleRange(scale) {\n        return scale.rangeExtent ? scale.rangeExtent() : this._d3_scaleExtent(scale.range());\n    }\n});\n\nmodule.exports = Brush;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/Brush.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Chart = require('./Chart');\nlet Axis = require('./Axis');\nlet Path = require('./Path');\nlet Tooltip = require('./Tooltip');\n\nlet DefaultPropsMixin = require('./DefaultPropsMixin');\nlet HeightWidthMixin = require('./HeightWidthMixin');\nlet ArrayifyMixin = require('./ArrayifyMixin');\nlet AccessorMixin = require('./AccessorMixin');\nlet DefaultScalesMixin = require('./DefaultScalesMixin');\nlet TooltipMixin = require('./TooltipMixin');\n\nlet DataSet = React.createClass({\n    propTypes: {\n        data: React.PropTypes.array.isRequired,\n        line: React.PropTypes.func.isRequired,\n        colorScale: React.PropTypes.func.isRequired\n    },\n\n    render() {\n        let {width,\n             height,\n             data,\n             line,\n             strokeWidth,\n             strokeLinecap,\n             strokeDasharray,\n             colorScale,\n             values,\n             label,\n             onMouseEnter,\n             onMouseLeave} = this.props;\n\n        let lines = data.map((stack, index) => {\n            return (\n                    <Path\n                key={`${label(stack)}.${index}`}\n                className={'line'}\n                d={line(values(stack))}\n                stroke={colorScale(label(stack))}\n                strokeWidth={typeof strokeWidth === 'function' ? strokeWidth(label(stack)) : strokeWidth}\n                strokeLinecap={typeof strokeLinecap === 'function' ? strokeLinecap(label(stack)) : strokeLinecap}\n                strokeDasharray={typeof strokeDasharray === 'function' ? strokeDasharray(label(stack)) : strokeDasharray}\n                data={values(stack)}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                style={{clipPath: 'url(#lineClip)'}}\n                    />\n            );\n        });\n\n        /*\n         The <rect> below is needed in case we want to show the tooltip no matter where on the chart the mouse is.\n         Not sure if this should be used.\n         */\n        let rect = React.renderToString(<rect width={width} height={height}/>);\n        return (\n                <g>\n                <g dangerouslySetInnerHTML={{__html: `<defs><clipPath id=\"lineClip\">${rect}`}}/>\n                {lines}\n                <rect width={width} height={height} fill={'none'} stroke={'none'} style={{pointerEvents: 'all'}}\n            onMouseMove={ evt => { onMouseEnter(evt, data); } }\n            onMouseLeave={  evt => { onMouseLeave(evt); } }\n                />\n            </g>\n        );\n    }\n});\n\nlet LineChart = React.createClass({\n    mixins: [DefaultPropsMixin,\n             HeightWidthMixin,\n             ArrayifyMixin,\n             AccessorMixin,\n             DefaultScalesMixin,\n             TooltipMixin],\n\n    propTypes: {\n        interpolate: React.PropTypes.string,\n        defined: React.PropTypes.func\n    },\n\n    getDefaultProps() {\n        return {\n            interpolate: 'linear',\n            defined: () => true,\n            shape: 'circle',\n            shapeColor: null\n        };\n    },\n\n    /*\n     The code below supports finding the data values for the line closest to the mouse cursor.\n     Since it gets all events from the Rect overlaying the Chart the tooltip gets shown everywhere.\n     For now I don't want to use this method.\n     */\n    _tooltipHtml(data, position) {\n        let {x, y0, y, values, label} = this.props;\n        let [xScale, yScale] = [this._xScale, this._yScale];\n\n        let xValueCursor = xScale.invert(position[0]);\n        let yValueCursor = yScale.invert(position[1]);\n\n        let xBisector = d3.bisector(e => { return x(e); }).left;\n        let valuesAtX = data.map(stack => {\n            let idx = xBisector(values(stack), xValueCursor);\n\n            let indexRight = idx === values(stack).length ? idx - 1 : idx;\n            let valueRight = x(values(stack)[indexRight]);\n\n            let indexLeft = idx === 0 ? idx : idx - 1;\n            let valueLeft = x(values(stack)[indexLeft]);\n\n            let index;\n            if (Math.abs(xValueCursor - valueRight) < Math.abs(xValueCursor - valueLeft)) {\n                index = indexRight;\n            } else {\n                index = indexLeft;\n            }\n\n            return { label: label(stack), value: values(stack)[index] };\n        });\n\n        valuesAtX.sort((a, b) => { return y(a.value) - y(b.value); });\n\n        let yBisector = d3.bisector(e => { return y(e.value); }).left;\n        let yIndex = yBisector(valuesAtX, yValueCursor);\n\n        let yIndexRight = yIndex === valuesAtX.length ? yIndex - 1 : yIndex;\n        let yIndexLeft = yIndex === 0 ? yIndex : yIndex - 1;\n\n        let yValueRight = y(valuesAtX[yIndexRight].value);\n        let yValueLeft = y(valuesAtX[yIndexLeft].value);\n\n        let index;\n        if (Math.abs(yValueCursor - yValueRight) < Math.abs(yValueCursor - yValueLeft)) {\n            index = yIndexRight;\n        } else {\n            index = yIndexLeft;\n        }\n\n        this._tooltipData = valuesAtX[index];\n\n        let html = this.props.tooltipHtml(valuesAtX[index].label,\n                                          valuesAtX[index].value);\n\n        let xPos = xScale(valuesAtX[index].value.x);\n        let yPos = yScale(valuesAtX[index].value.y);\n        return [html, xPos, yPos];\n    },\n\n    /*\n    _tooltipHtml(data, position) {\n        let {x, y0, y, values, label} = this.props;\n        let [xScale, yScale] = [this._xScale, this._yScale];\n\n        let xValueCursor = xScale.invert(position[0]);\n        let yValueCursor = yScale.invert(position[1]);\n\n        let xBisector = d3.bisector(e => { return x(e); }).left;\n        let xIndex = xBisector(data, xScale.invert(position[0]));\n\n        let indexRight = xIndex == data.length ? xIndex - 1 : xIndex;\n        let valueRight = x(data[indexRight]);\n\n        let indexLeft = xIndex == 0 ? xIndex : xIndex - 1;\n        let valueLeft = x(data[indexLeft]);\n\n        let index;\n        if (Math.abs(xValueCursor - valueRight) < Math.abs(xValueCursor - valueLeft)) {\n            index = indexRight;\n        } else {\n            index = indexLeft;\n        }\n\n        let yValue = y(data[index]);\n        let cursorValue = d3.round(yScale.invert(position[1]), 2);\n\n        return this.props.tooltipHtml(yValue, cursorValue);\n    },\n     */\n\n    /*\n             stroke,\n             strokeWidth,\n             strokeLinecap,\n             strokeDasharray,\n     */\n    render() {\n        let {height,\n             width,\n             margin,\n             colorScale,\n             interpolate,\n             defined,\n             stroke,\n             values,\n             label,\n             x,\n             y,\n             xAxis,\n             yAxis,\n             shape,\n             shapeColor} = this.props;\n\n        let [data,\n             innerWidth,\n             innerHeight,\n             xScale,\n             yScale,\n             xIntercept,\n             yIntercept] = [this._data,\n                            this._innerWidth,\n                            this._innerHeight,\n                            this._xScale,\n                            this._yScale,\n                            this._xIntercept,\n                            this._yIntercept];\n\n        let line = d3.svg.line()\n                .x(function(e) { return xScale(x(e)); })\n                .y(function(e) { return yScale(y(e)); })\n                .interpolate(interpolate)\n                .defined(defined);\n\n        let tooltipSymbol;\n        if (!this.state.tooltip.hidden) {\n            let symbol = d3.svg.symbol().type(shape);\n            let symbolColor = shapeColor ? shapeColor : colorScale(this._tooltipData.label);\n\n            let translate = this._tooltipData ? `translate(${xScale(x(this._tooltipData.value))}, ${yScale(y(this._tooltipData.value))})` : \"\";\n            tooltipSymbol = this.state.tooltip.hidden ? null :\n                <path\n            className=\"dot\"\n            d={symbol()}\n            transform={translate}\n            fill={symbolColor}\n            onMouseEnter={evt => { this.onMouseEnter(evt, data); }}\n            onMouseLeave={evt => { this.onMouseLeave(evt); }}\n                />;\n        }\n\n        return (\n                <div>\n                <Chart height={height} width={width} margin={margin}>\n\n                <DataSet\n            height={innerHeight}\n            width={innerWidth}\n            data={data}\n            line={line}\n            colorScale={colorScale}\n            values={values}\n            label={label}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n            {...stroke}\n                />\n\n                <Axis\n            className={'x axis'}\n            orientation={'bottom'}\n            scale={xScale}\n            height={innerHeight}\n            width={innerWidth}\n            zero={yIntercept}\n            {...xAxis}\n                />\n\n                <Axis\n            className={'y axis'}\n            orientation={'left'}\n            scale={yScale}\n            height={innerHeight}\n            width={innerWidth}\n            zero={xIntercept}\n            {...yAxis}\n                />\n\n                {tooltipSymbol}\n\n                </Chart>\n\n                <Tooltip {...this.state.tooltip}/>\n            </div>\n        );\n    }\n});\n\nmodule.exports = LineChart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/LineChart.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Chart = require('./Chart');\nlet Tooltip = require('./Tooltip');\n\nlet DefaultPropsMixin = require('./DefaultPropsMixin');\nlet HeightWidthMixin = require('./HeightWidthMixin');\nlet AccessorMixin = require('./AccessorMixin');\nlet TooltipMixin = require('./TooltipMixin');\n\nlet Wedge = React.createClass({\n    propTypes: {\n        d: React.PropTypes.string.isRequired,\n        fill: React.PropTypes.string.isRequired\n    },\n\n    render() {\n        let {fill, d, data, onMouseEnter, onMouseLeave} = this.props;\n\n        return (\n                <path\n            fill={fill}\n            d={d}\n            onMouseMove={ evt => { onMouseEnter(evt, data); } }\n            onMouseLeave={  evt => { onMouseLeave(evt); } }\n                />\n        );\n    }\n});\n\nlet DataSet = React.createClass({\n    propTypes: {\n        pie: React.PropTypes.array.isRequired,\n        arc: React.PropTypes.func.isRequired,\n        outerArc: React.PropTypes.func.isRequired,\n        colorScale: React.PropTypes.func.isRequired,\n        radius: React.PropTypes.number.isRequired,\n        strokeWidth: React.PropTypes.number,\n        stroke: React.PropTypes.string,\n        fill: React.PropTypes.string,\n        opacity: React.PropTypes.number,\n        x: React.PropTypes.func.isRequired\n    },\n\n    getDefaultProps() {\n        return {\n            strokeWidth: 2,\n            stroke: '#000',\n            fill: 'none',\n            opacity: 0.3\n        };\n    },\n\n    render() {\n        let {pie,\n             arc,\n             outerArc,\n             colorScale,\n             radius,\n             strokeWidth,\n             stroke,\n             fill,\n             opacity,\n             x,\n             y,\n             onMouseEnter,\n             onMouseLeave} = this.props;\n\n        let wedges = pie.map((e, index) => {\n            function midAngle(d){\n                return d.startAngle + (d.endAngle - d.startAngle)/2;\n            }\n\n            let d = arc(e);\n\n            let labelPos = outerArc.centroid(e);\n            labelPos[0] = radius * (midAngle(e) < Math.PI ? 1 : -1);\n\n            let textAnchor = midAngle(e) < Math.PI ? 'start' : 'end';\n\n            let linePos = outerArc.centroid(e);\n            linePos[0] = radius * 0.95 * (midAngle(e) < Math.PI ? 1 : -1);\n\n            return (\n                    <g key={`${x(e.data)}.${y(e.data)}.${index}`} className=\"arc\">\n                    <Wedge\n                data={e.data}\n                fill={colorScale(x(e.data))}\n                d={d}\n                onMouseEnter={onMouseEnter}\n                onMouseLeave={onMouseLeave}\n                    />\n\n                    <polyline\n                opacity={opacity}\n                strokeWidth={strokeWidth}\n                stroke={stroke}\n                fill={fill}\n                points={[arc.centroid(e), outerArc.centroid(e), linePos]}\n                    />\n\n                    <text\n                dy=\".35em\"\n                x={labelPos[0]}\n                y={labelPos[1]}\n                textAnchor={textAnchor}>{x(e.data)}</text>\n                    </g>\n            );\n        });\n\n        return (\n                <g>\n                {wedges}\n            </g>\n        );\n    }\n});\n\nlet PieChart = React.createClass({\n    mixins: [DefaultPropsMixin,\n             HeightWidthMixin,\n             AccessorMixin,\n             TooltipMixin],\n\n    propTypes: {\n        innerRadius: React.PropTypes.number,\n        outerRadius: React.PropTypes.number,\n        labelRadius: React.PropTypes.number,\n        padRadius: React.PropTypes.string,\n        cornerRadius: React.PropTypes.number,\n        sort: React.PropTypes.any\n    },\n\n    getDefaultProps() {\n        return {\n            innerRadius: null,\n            outerRadius: null,\n            labelRadius: null,\n            padRadius: 'auto',\n            cornerRadius: 0,\n            sort: undefined\n        };\n    },\n\n    _tooltipHtml(d, position) {\n        let html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n\n        return [html, 0, 0];\n    },\n\n    render() {\n        let {data,\n             width,\n             height,\n             margin,\n             colorScale,\n             innerRadius,\n             outerRadius,\n             labelRadius,\n             padRadius,\n             cornerRadius,\n             sort,\n             x,\n             y,\n             values} = this.props;\n\n        let [innerWidth,\n             innerHeight] = [this._innerWidth,\n                             this._innerHeight];\n\n        let pie = d3.layout.pie()\n                .value(e => { return y(e); });\n\n        if (typeof sort !== 'undefined') {\n            pie = pie.sort(sort);\n        }\n\n        let radius = Math.min(innerWidth, innerHeight) / 2;\n        if (!innerRadius) {\n            innerRadius = radius * 0.8;\n        }\n\n        if (!outerRadius) {\n            outerRadius = radius * 0.4;\n        }\n\n        if (!labelRadius) {\n            labelRadius = radius * 0.9;\n        }\n\n        let arc = d3.svg.arc()\n                .innerRadius(innerRadius)\n                .outerRadius(outerRadius)\n                .padRadius(padRadius)\n                .cornerRadius(cornerRadius);\n\n        let outerArc = d3.svg.arc()\n                .innerRadius(labelRadius)\n                .outerRadius(labelRadius);\n\n        let pieData = pie(values(data));\n\n        let translation = `translate(${innerWidth/2}, ${innerHeight/2})`;\n        return (\n            <div>\n                <Chart height={height} width={width} margin={margin}>\n                <g transform={translation}>\n                <DataSet\n            width={innerWidth}\n            height={innerHeight}\n            colorScale={colorScale}\n            pie={pieData}\n            arc={arc}\n            outerArc={outerArc}\n            radius={radius}\n            x={x}\n            y={y}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n                />\n                </g>\n                </Chart>\n\n                <Tooltip {...this.state.tooltip}/>\n                </div>\n        );\n    }\n});\n\nmodule.exports = PieChart;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/PieChart.jsx\n **/","let React = require('react');\nlet d3 = require('d3');\n\nlet Chart = require('./Chart');\nlet Axis = require('./Axis');\nlet Tooltip = require('./Tooltip');\n\nlet DefaultPropsMixin = require('./DefaultPropsMixin');\nlet HeightWidthMixin = require('./HeightWidthMixin');\nlet ArrayifyMixin = require('./ArrayifyMixin');\nlet AccessorMixin = require('./AccessorMixin');\nlet DefaultScalesMixin = require('./DefaultScalesMixin');\nlet TooltipMixin = require('./TooltipMixin');\n\nlet DataSet = React.createClass({\n    propTypes: {\n        data: React.PropTypes.array.isRequired,\n        symbol: React.PropTypes.func.isRequired,\n        xScale: React.PropTypes.func.isRequired,\n        yScale: React.PropTypes.func.isRequired,\n        colorScale: React.PropTypes.func.isRequired,\n        onMouseEnter: React.PropTypes.func,\n        onMouseLeave: React.PropTypes.func\n    },\n\n    render() {\n        let {data,\n             symbol,\n             xScale,\n             yScale,\n             colorScale,\n             label,\n             values,\n             x,\n             y,\n             onMouseEnter,\n             onMouseLeave} = this.props;\n\n        let circles = data.map(stack => {\n            return values(stack).map((e, index) => {\n                let translate = `translate(${xScale(x(e))}, ${yScale(y(e))})`;\n                return (\n                        <path\n                    key={`${label(stack)}.${index}`}\n                    className=\"dot\"\n                    d={symbol()}\n                    transform={translate}\n                    fill={colorScale(label(stack))}\n                    onMouseOver={ evt => { onMouseEnter(evt, e); } }\n                    onMouseLeave={  evt => { onMouseLeave(evt); } }\n                        />\n                );\n            });\n        });\n\n        return (\n                <g>\n                {circles}\n            </g>\n        );\n    }\n});\n\nlet ScatterPlot = React.createClass({\n    mixins: [DefaultPropsMixin,\n             HeightWidthMixin,\n             ArrayifyMixin,\n             AccessorMixin,\n             DefaultScalesMixin,\n             TooltipMixin],\n\n    propTypes: {\n        rScale: React.PropTypes.func,\n        shape: React.PropTypes.string\n    },\n\n    getDefaultProps() {\n        return {\n            rScale: null,\n            shape: 'circle'\n        };\n    },\n\n    _tooltipHtml(d, position) {\n        let [xScale, yScale] = [this._xScale, this._yScale];\n\n        let html = this.props.tooltipHtml(this.props.x(d), this.props.y(d));\n\n        let xPos = xScale(this.props.x(d));\n        let yPos = yScale(this.props.y(d));\n\n        return [html, xPos, yPos];\n    },\n\n    render() {\n        let {height,\n             width,\n             margin,\n             colorScale,\n             rScale,\n             shape,\n             label,\n             values,\n             x,\n             y,\n             xAxis,\n             yAxis} = this.props;\n\n        let [data,\n             innerWidth,\n             innerHeight,\n             xScale,\n             yScale,\n             xIntercept,\n             yIntercept] = [this._data,\n                            this._innerWidth,\n                            this._innerHeight,\n                            this._xScale,\n                            this._yScale,\n                            this._xIntercept,\n                            this._yIntercept];\n\n        let symbol = d3.svg.symbol().type(shape);\n\n        if (rScale) {\n            symbol = symbol.size(rScale);\n        }\n\n        return (\n            <div>\n                <Chart height={height} width={width} margin={margin}>\n                <Axis\n            className={\"x axis\"}\n            orientation=\"bottom\"\n            scale={xScale}\n            height={innerHeight}\n            width={innerWidth}\n            zero={yIntercept}\n            {...xAxis}\n                />\n\n                <Axis\n            className={\"y axis\"}\n            orientation=\"left\"\n            scale={yScale}\n            height={innerHeight}\n            width={innerWidth}\n            zero={xIntercept}\n            {...yAxis}\n                />\n\n                <DataSet\n            data={data}\n            xScale={xScale}\n            yScale={yScale}\n            colorScale={colorScale}\n            symbol={symbol}\n            label={label}\n            values={values}\n            x={x}\n            y={y}\n            onMouseEnter={this.onMouseEnter}\n            onMouseLeave={this.onMouseLeave}\n                />\n                </Chart>\n\n                <Tooltip\n            hidden={this.state.tooltip.hidden}\n            top={this.state.tooltip.top}\n            left={this.state.tooltip.left}\n            html={this.state.tooltip.html}/>\n                </div>\n        );\n    }\n});\n\nmodule.exports = ScatterPlot;\n\n\n\n/** WEBPACK FOOTER **\n ** ./src/ScatterPlot.jsx\n **/"],"sourceRoot":""}